{"version":3,"sources":["algorithm_visualizer.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_$","$","extend","cache","lastFileUsed","files","assertFileName","name","getCachedFile","updateCachedFile","updates","getLastFileUsed","setLastFileUsed","file","2","Editor","TracerManager","DOM","_require","showLoadingSlider","hideLoadingSlider","_require2","Cache","getFileDir","state","isLoading","editor","tracerManager","categories","loadedScratch","initState","App","this","getIsLoading","setIsLoading","loading","getEditor","getCategories","getCategory","setCategories","updateCategory","getTracerManager","getLoadedScratch","setLoadedScratch","init","setup","prototype","../dom/loading_slider","../dom/setup","../editor","../tracer_manager","../utils","./cache","3","4","app","Server","showAlgorithm","each","addAlgorithmToCategoryDOM","category","subList","algorithm","$algorithm","append","attr","click","loadAlgorithm","then","data","addCategoryToDOM","_app$getCategory","categoryName","categorySubList","list","$category","toggleClass","find","../app","../server","./show_algorithm","5","addFileToDOM","explanation","$file","loadFile","removeClass","addClass","requestedFile","empty","first","scroll","6","addCategories","showDescription","addFiles","showFirstAlgorithm","showRequestedAlgorithm","./add_categories","./add_files","./show_description","./show_first_algorithm","./show_requested_algorithm","7","8","setupDividers","setupDocument","setupFilesBar","setupInterval","setupModuleContainer","setupPoweredBy","setupScratchPaper","setupSideMenu","setupTopMenu","setupWindow","stopPropagation","./setup_dividers","./setup_document","./setup_files_bar","./setup_interval","./setup_module_container","./setup_powered_by","./setup_scratch_paper","./setup_side_menu","./setup_top_menu","./setup_window","9","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","err","Array","isArray","Object","TypeError","addDividerToDom","divider","_divider","vertical","$first","$second","$parent","parent","thickness","$divider","dragging","_left","css","top","bottom","left","width","x","mousedown","_ref","pageX","document","mousemove","_ref2","new_left","position","percent","Math","min","max","resize","mouseup","_top","height","right","y","_ref3","pageY","_ref4","new_top","dividers","../../app","10","on","console","log","preventDefault","window","open","alert","command","11","definitelyBigger","$wrapper","clipWidth","scrollLeft","children","get","reverse","outerWidth","$left","$right","lefter","righter","12","Toast","parseFloat","Number","minInterval","maxInterval","startInterval","stepInterval","normalize","sec","interval","message","$interval","val","step","_normalize","_normalize2","seconds","showInfoToast","../toast","13","$module_container","findOwner","mousewheel","14","15","../../server","../show_algorithm","16","sidemenu_percent","$sidemenu","$workspace","hasClass","17","select","$icon","shareScratchPaper","url","execute","error","showErrorToast","isPause","resumeStep","pauseStep","prevStep","nextStep","18","19","isScratchPaper","$menu","category_name","algorithm_name","categoryObj","html","clearContent","20","_typeof","obj","constructor","$container","key","$ul","forEach","li","prop","21","22","23","showToast","type","$toast","setTimeout","fadeOut","remove","24","id","ace","edit","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","setTheme","session","setMode","$blockScrolling","Infinity","25","deallocateAll","eval","visualize","removeUnallocated","executeData","algoData","executeDataAndCode","algoCode","26","_this","dataEditor","createEditor","codeEditor","setData","setValue","setCode","setContent","clearData","clearCode","getValue","Executor","./create","./executor","27","RSVP","AppConstructor","modules","ajaxSetup","dataType","getPath","reason","assert","appConstructor","loadCategories","_getPath","loadScratchPaper","./app","./app/constructor","./dom","./module","./server","./server/helpers","./utils","rsvp","28","Array2D","random","N","randomSorted","./array2d","29","M","D","j","map","sort","b","30","C","31","ratio","G","32","Array1D","CoordinateSystem","DirectedGraph","UndirectedGraph","WeightedDirectedGraph","WeightedUndirectedGraph","./array1d","./coordinate_system","./directed_graph","./undirected_graph","./weighted_directed_graph","./weighted_undirected_graph","33","34","35","36","tracers","datas","./data","./tracer","37","Array1DTracer","Array2DTracer","apply","arguments","create","_notify","idx","v","_denotify","_select","_selectRow","_deselect","_deselectRow","38","Tracer","refineByType","$table","capsule","manager","pushStep","sx","sy","ex","ey","pushSelectingStep","_selectCol","_deselectCol","_separate","_separateRow","_separateCol","_deseparate","_deseparateRow","_deseparateCol","args","slice","shift","mode","coord","processStep","options","$row","eq","$col","text","colorClass","selected","notified","paintColor","deseparate","separate","viewX","viewY","paddingH","paddingV","fontSize","getCellCss","refresh","clear","clearColor","deseparateAll","padding","toFixed","font-size","dragX","dragY","originalEvent","delta","wheelDelta","detail","weight","keys","join","after","../../tracer_manager/util/index","39","ChartTracer","color","labels","String","datasets","backgroundColor","scales","yAxes","ticks","beginAtZero","chart","Chart","config","toString","update","40","CoordinateSystemTracer","DirectedGraphTracer","tracer","settings","defaultEdgeType","funcEdgesDef","edge","source","target","context","getColor","drawEdge","graph","nodes","edges","label","size","read","camera","goTo","angle","visit","targetNode","visited","edgeId","dropEdge","addEdge","logTracer","print","v1","v2","temp","drawOnHover","node","setLineDash","nodeIdx","substring","ends","split","prefix","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","41","sigma","renderer","container","minArrowSize","maxEdgeSize","labelThreshold","font","defaultLabelColor","zoomMin","zoomMax","skipErrors","minNodeSize","maxNodeSize","labelSize","labelSizeRatio","funcLabelsDef","drawLabel","funcHoversDef","funcEdgesArrow","drawArrow","plugins","dragNodes","renderers","_setTreeData","root","_visit","_leave","setTreeData","maxDepth","chk","getDepth","depth","place","wgap","dfs","vgap","cnt","unitAngle","PI","currentAngle","sin","cos","clearGraphColor","default","edgeColor","defaultNodeColor","defaultEdgeColor","fillStyle","textAlign","fillText","round","tSize","sX","sY","tX","tY","atan2","dist","aSize","d","sqrt","pow","aX","aY","vX","vY","closePath","fill","canvas","def","func","hovers","arrow","42","LogTracer","UndirectedGraphTracer","WeightedDirectedGraphTracer","WeightedUndirectedGraphTracer","./chart","./log","43","_print","msg","scrollToEnd","duration","animate","scrollTop","scrollHeight","44","_toConsumableArray","arr2","from","allocate","setName","isNew","toJSON","fromJSON","_setData","_len","_key","_clear","_wait","newStep","$name","defaultName","lastData","attach","45","46","edgeLabelSize","defaultEdgeLabelSize","edgeLabelSizePowRatio","drawNodeWeight","drawEdgeWeight","_weight","clearWeights","dX","dY","save","active","textBaseline","translate","rotate","restore","47","48","request","./request","49","50","JSON","stringify","51","ajax","defaults","Promise","resolve","reject","callbacks","success","response","opts","52","checkLoading","getParameterByName","location","href","regex","RegExp","results","exec","_results","getHashValue","hash","substr","params","pair","setHashValue","found","newHash","removeHashValue","splice","setPath","path","_hash$split","_hash$split2","../dom/toast","53","./load_algorithm","./load_categories","./load_file","./load_scratch_paper","./share_scratch_paper","54","getJSON","getAlgorithmDir","dir","./ajax/get_json","55","56","loadDataAndCode","loadFileAndUpdateContent","content","cachedContentExists","cachedFile","./ajax/get","./helpers","57","extractGistCode","gistID","CREDIT.md","58","postJSON","_app$getEditor","gist","description","public","data.js","code.js","_location","./ajax/post_json","59","tm","../module/tracer/tracer","./manager","60","stepLimit","timer","pause","capsules","add","allocated","newTracer","selectedCapsule","count","order","reset","changed","grep","removed","setInterval","traces","traceIndex","stepCnt","clearTimeout","len","last","isNaN","trace","virtual","finalIndex","functionName","61","parse","62","./from_json","./refine_by_type","./to_json","63","item","refineNumber","refineString","str","num","64","65","66","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","fun","array","noop","process","nextTick","title","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","67","global","lib$rsvp$utils$$objectOrFunction","lib$rsvp$utils$$isFunction","lib$rsvp$utils$$isMaybeThenable","lib$rsvp$utils$$F","lib$rsvp$events$$indexOf","callback","lib$rsvp$events$$callbacksFor","object","_promiseCallbacks","lib$rsvp$config$$configure","lib$rsvp$config$$config","lib$rsvp$instrument$$scheduleFlush","entry","lib$rsvp$instrument$$queue","payload","guid","childGuid","childId","stack","lib$rsvp$instrument$$instrument","eventName","promise","child","_guidKey","_id","_result","_label","timeStamp","lib$rsvp$utils$$now","lib$rsvp$then$$then","onFulfillment","onRejection","_state","lib$rsvp$$internal$$FULFILLED","lib$rsvp$$internal$$REJECTED","instrument","lib$rsvp$instrument$$default","_onError","lib$rsvp$$internal$$noop","result","async","lib$rsvp$$internal$$invokeCallback","lib$rsvp$$internal$$subscribe","lib$rsvp$promise$resolve$$resolve","Constructor","lib$rsvp$$internal$$resolve","lib$rsvp$enumerator$$makeSettledResult","lib$rsvp$enumerator$$Enumerator","input","abortOnReject","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","lib$rsvp$$internal$$fulfill","_enumerate","lib$rsvp$$internal$$reject","_validationError","lib$rsvp$promise$all$$all","entries","lib$rsvp$enumerator$$default","lib$rsvp$promise$race$$race","lib$rsvp$utils$$isArray","lib$rsvp$$internal$$PENDING","lib$rsvp$promise$reject$$reject","lib$rsvp$promise$$needsResolver","lib$rsvp$promise$$needsNew","lib$rsvp$promise$$Promise","resolver","lib$rsvp$promise$$counter","_subscribers","lib$rsvp$$internal$$initializePromise","lib$rsvp$$internal$$withOwnPromise","lib$rsvp$$internal$$getThen","lib$rsvp$$internal$$GET_THEN_ERROR","lib$rsvp$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$rsvp$$internal$$handleForeignThenable","thenable","sealed","lib$rsvp$$internal$$handleOwnThenable","lib$rsvp$$internal$$handleMaybeThenable","maybeThenable","lib$rsvp$then$$default","lib$rsvp$promise$resolve$$default","lib$rsvp$$internal$$publishRejection","lib$rsvp$$internal$$publish","subscribers","settled","lib$rsvp$$internal$$ErrorObject","lib$rsvp$$internal$$tryCatch","lib$rsvp$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","resolved","lib$rsvp$all$settled$$AllSettled","_superConstructor","lib$rsvp$all$settled$$allSettled","lib$rsvp$promise$$default","lib$rsvp$all$$all","all","lib$rsvp$asap$$asap","arg","lib$rsvp$asap$$queue","lib$rsvp$asap$$len","lib$rsvp$asap$$scheduleFlush","lib$rsvp$asap$$useNextTick","match","setImmediate","lib$rsvp$asap$$flush","lib$rsvp$asap$$useVertxTimer","lib$rsvp$asap$$vertxNext","lib$rsvp$asap$$useMutationObserver","iterations","observer","lib$rsvp$asap$$BrowserMutationObserver","createTextNode","observe","characterData","lib$rsvp$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$rsvp$asap$$useSetTimeout","lib$rsvp$asap$$attemptVertex","vertx","runOnLoop","runOnContext","lib$rsvp$defer$$defer","deferred","lib$rsvp$filter$$filter","promises","filterFn","values","filtered","newLength","lib$rsvp$promise$hash$$PromiseHash","lib$rsvp$hash$settled$$HashSettled","lib$rsvp$hash$settled$$hashSettled","lib$rsvp$hash$$hash","lib$rsvp$promise$hash$$default","lib$rsvp$map$$map","mapFn","lib$rsvp$node$$Result","lib$rsvp$node$$getThen","lib$rsvp$node$$ERROR","lib$rsvp$node$$tryApply","lib$rsvp$node$$makeObject","_","argumentNames","lib$rsvp$node$$arrayResult","lib$rsvp$node$$wrapThenable","onFulFillment","lib$rsvp$node$$denodeify","nodeFunc","fn","self","promiseInput","lib$rsvp$node$$needsPromiseInput","lib$rsvp$node$$GET_THEN_ERROR","p","lib$rsvp$node$$handlePromiseInput","lib$rsvp$node$$handleValueInput","__proto__","lib$rsvp$race$$race","race","lib$rsvp$reject$$reject","lib$rsvp$resolve$$resolve","lib$rsvp$rethrow$$rethrow","lib$rsvp$$async","lib$rsvp$$on","lib$rsvp$$off","lib$rsvp$utils$$_isArray","Date","now","getTime","lib$rsvp$utils$$o_create","lib$rsvp$events$$default","mixin","allCallbacks","index","trigger","_eachEntry","_settleMaybeThenable","c","_settledAt","_makeResult","_willSettleAt","enumerator","lib$rsvp$promise$all$$default","lib$rsvp$promise$race$$default","lib$rsvp$promise$reject$$default","lib$rsvp$promise$$guidKey","cast","catch","finally","lib$rsvp$all$settled$$default","lib$rsvp$all$$default","lib$rsvp$asap$$default","lib$rsvp$asap$$browserWindow","lib$rsvp$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$rsvp$asap$$isNode","lib$rsvp$asap$$isWorker","Uint8ClampedArray","importScripts","lib$rsvp$defer$$default","lib$rsvp$filter$$default","hasOwnProperty","lib$rsvp$platform$$platform","lib$rsvp$hash$settled$$default","lib$rsvp$hash$$default","lib$rsvp$map$$default","lib$rsvp$node$$default","lib$rsvp$platform$$default","lib$rsvp$race$$default","lib$rsvp$reject$$default","lib$rsvp$resolve$$default","lib$rsvp$rethrow$$default","cb","lib$rsvp$$callbacks","lib$rsvp$$eventName","lib$rsvp$umd$$RSVP","allSettled","hashSettled","denodeify","filter","rethrow","defer","EventTarget","configure","define","_process"],"mappings":"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","file":"algorithm_visualizer.min.js","sourcesContent":["/**\n * algorithm-visualizer - Algorithm Visualizer\n * @version v0.1.0\n * @author Jason Park & contributors\n * @link https://github.com/parkjs814/AlgorithmVisualizer#readme\n * @license MIT\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _$ = $;\nvar extend = _$.extend;\n\n\nvar cache = {\n  lastFileUsed: '',\n  files: {}\n};\n\nvar assertFileName = function assertFileName(name) {\n  if (!name) {\n    throw 'Missing file name';\n  }\n};\n\n/**\n * Global application cache\n */\nmodule.exports = {\n  getCachedFile: function getCachedFile(name) {\n    assertFileName(name);\n    return cache.files[name];\n  },\n  updateCachedFile: function updateCachedFile(name, updates) {\n    assertFileName(name);\n    if (!cache.files[name]) {\n      cache.files[name] = {};\n    }\n    extend(cache.files[name], updates);\n  },\n  getLastFileUsed: function getLastFileUsed() {\n    return cache.lastFileUsed;\n  },\n  setLastFileUsed: function setLastFileUsed(file) {\n    cache.lastFileUsed = file;\n  }\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar Editor = require('../editor');\nvar TracerManager = require('../tracer_manager');\nvar DOM = require('../dom/setup');\n\nvar _require = require('../dom/loading_slider');\n\nvar showLoadingSlider = _require.showLoadingSlider;\nvar hideLoadingSlider = _require.hideLoadingSlider;\n\nvar _require2 = require('../utils');\n\nvar getFileDir = _require2.getFileDir;\n\n\nvar Cache = require('./cache');\n\nvar state = {\n  isLoading: null,\n  editor: null,\n  tracerManager: null,\n  categories: null,\n  loadedScratch: null\n};\n\nvar initState = function initState(tracerManager) {\n  state.isLoading = false;\n  state.editor = new Editor(tracerManager);\n  state.tracerManager = tracerManager;\n  state.categories = {};\n  state.loadedScratch = null;\n};\n\n/**\n * Global application singleton.\n */\nvar App = function App() {\n\n  this.getIsLoading = function () {\n    return state.isLoading;\n  };\n\n  this.setIsLoading = function (loading) {\n    state.isLoading = loading;\n    if (loading) {\n      showLoadingSlider();\n    } else {\n      hideLoadingSlider();\n    }\n  };\n\n  this.getEditor = function () {\n    return state.editor;\n  };\n\n  this.getCategories = function () {\n    return state.categories;\n  };\n\n  this.getCategory = function (name) {\n    return state.categories[name];\n  };\n\n  this.setCategories = function (categories) {\n    state.categories = categories;\n  };\n\n  this.updateCategory = function (name, updates) {\n    $.extend(state.categories[name], updates);\n  };\n\n  this.getTracerManager = function () {\n    return state.tracerManager;\n  };\n\n  this.getLoadedScratch = function () {\n    return state.loadedScratch;\n  };\n\n  this.setLoadedScratch = function (loadedScratch) {\n    state.loadedScratch = loadedScratch;\n  };\n\n  var tracerManager = TracerManager.init();\n\n  initState(tracerManager);\n  DOM.setup(tracerManager);\n};\n\nApp.prototype = Cache;\n\nmodule.exports = App;\n\n},{\"../dom/loading_slider\":7,\"../dom/setup\":8,\"../editor\":26,\"../tracer_manager\":59,\"../utils\":65,\"./cache\":1}],3:[function(require,module,exports){\n'use strict';\n\n/**\n * This is the main application instance.\n * Gets populated on page load. \n */\n\nmodule.exports = {};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar Server = require('../server');\nvar showAlgorithm = require('./show_algorithm');\n\nvar _$ = $;\nvar each = _$.each;\n\n\nvar addAlgorithmToCategoryDOM = function addAlgorithmToCategoryDOM(category, subList, algorithm) {\n  var $algorithm = $('<button class=\"indent collapse\">').append(subList[algorithm]).attr('data-algorithm', algorithm).attr('data-category', category).click(function () {\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n\n  $('#list').append($algorithm);\n};\n\nvar addCategoryToDOM = function addCategoryToDOM(category) {\n  var _app$getCategory = app.getCategory(category);\n\n  var categoryName = _app$getCategory.name;\n  var categorySubList = _app$getCategory.list;\n\n\n  var $category = $('<button class=\"category\">').append('<i class=\"fa fa-fw fa-caret-right\">').append(categoryName).attr('data-category', category);\n\n  $category.click(function () {\n    $('.indent[data-category=\"' + category + '\"]').toggleClass('collapse');\n    $(this).find('i.fa').toggleClass('fa-caret-right fa-caret-down');\n  });\n\n  $('#list').append($category);\n\n  each(categorySubList, function (algorithm) {\n    addAlgorithmToCategoryDOM(category, categorySubList, algorithm);\n  });\n};\n\nmodule.exports = function () {\n  each(app.getCategories(), addCategoryToDOM);\n};\n\n},{\"../app\":3,\"../server\":53,\"./show_algorithm\":19}],5:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../server');\n\nvar _$ = $;\nvar each = _$.each;\n\n\nvar addFileToDOM = function addFileToDOM(category, algorithm, file, explanation) {\n  var $file = $('<button>').append(file).attr('data-file', file).click(function () {\n    Server.loadFile(category, algorithm, file, explanation);\n    $('.files_bar > .wrapper > button').removeClass('active');\n    $(this).addClass('active');\n  });\n  $('.files_bar > .wrapper').append($file);\n  return $file;\n};\n\nmodule.exports = function (category, algorithm, files, requestedFile) {\n  $('.files_bar > .wrapper').empty();\n\n  each(files, function (file, explanation) {\n    var $file = addFileToDOM(category, algorithm, file, explanation);\n    if (requestedFile && requestedFile == file) $file.click();\n  });\n\n  if (!requestedFile) $('.files_bar > .wrapper > button').first().click();\n  $('.files_bar > .wrapper').scroll();\n};\n\n},{\"../server\":53}],6:[function(require,module,exports){\n'use strict';\n\nvar showAlgorithm = require('./show_algorithm');\nvar addCategories = require('./add_categories');\nvar showDescription = require('./show_description');\nvar addFiles = require('./add_files');\nvar showFirstAlgorithm = require('./show_first_algorithm');\nvar showRequestedAlgorithm = require('./show_requested_algorithm');\n\nmodule.exports = {\n  showAlgorithm: showAlgorithm,\n  addCategories: addCategories,\n  showDescription: showDescription,\n  addFiles: addFiles,\n  showFirstAlgorithm: showFirstAlgorithm,\n  showRequestedAlgorithm: showRequestedAlgorithm\n};\n\n},{\"./add_categories\":4,\"./add_files\":5,\"./show_algorithm\":19,\"./show_description\":20,\"./show_first_algorithm\":21,\"./show_requested_algorithm\":22}],7:[function(require,module,exports){\n'use strict';\n\nvar showLoadingSlider = function showLoadingSlider() {\n  $('#loading-slider').removeClass('loaded');\n};\n\nvar hideLoadingSlider = function hideLoadingSlider() {\n  $('#loading-slider').addClass('loaded');\n};\n\nmodule.exports = {\n  showLoadingSlider: showLoadingSlider,\n  hideLoadingSlider: hideLoadingSlider\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar setupDividers = require('./setup_dividers');\nvar setupDocument = require('./setup_document');\nvar setupFilesBar = require('./setup_files_bar');\nvar setupInterval = require('./setup_interval');\nvar setupModuleContainer = require('./setup_module_container');\nvar setupPoweredBy = require('./setup_powered_by');\nvar setupScratchPaper = require('./setup_scratch_paper');\nvar setupSideMenu = require('./setup_side_menu');\nvar setupTopMenu = require('./setup_top_menu');\nvar setupWindow = require('./setup_window');\n\n/**\n * Initializes elements once the app loads in the DOM. \n */\nvar setup = function setup() {\n\n  $('.btn input').click(function (e) {\n    e.stopPropagation();\n  });\n\n  // dividers\n  setupDividers();\n\n  // document\n  setupDocument();\n\n  // files bar\n  setupFilesBar();\n\n  // interval\n  setupInterval();\n\n  // module container\n  setupModuleContainer();\n\n  // powered by\n  setupPoweredBy();\n\n  // scratch paper\n  setupScratchPaper();\n\n  // side menu\n  setupSideMenu();\n\n  // top menu\n  setupTopMenu();\n\n  // window\n  setupWindow();\n};\n\nmodule.exports = {\n  setup: setup\n};\n\n},{\"./setup_dividers\":9,\"./setup_document\":10,\"./setup_files_bar\":11,\"./setup_interval\":12,\"./setup_module_container\":13,\"./setup_powered_by\":14,\"./setup_scratch_paper\":15,\"./setup_side_menu\":16,\"./setup_top_menu\":17,\"./setup_window\":18}],9:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../../app');\n\nvar addDividerToDom = function addDividerToDom(divider) {\n  var _divider = _slicedToArray(divider, 3);\n\n  var vertical = _divider[0];\n  var $first = _divider[1];\n  var $second = _divider[2];\n\n  var $parent = $first.parent();\n  var thickness = 5;\n\n  var $divider = $('<div class=\"divider\">');\n\n  var dragging = false;\n  if (vertical) {\n    (function () {\n      $divider.addClass('vertical');\n\n      var _left = -thickness / 2;\n      $divider.css({\n        top: 0,\n        bottom: 0,\n        left: _left,\n        width: thickness\n      });\n\n      var x = void 0;\n      $divider.mousedown(function (_ref) {\n        var pageX = _ref.pageX;\n\n        x = pageX;\n        dragging = true;\n      });\n\n      $(document).mousemove(function (_ref2) {\n        var pageX = _ref2.pageX;\n\n        if (dragging) {\n          var new_left = $second.position().left + pageX - x;\n          var percent = new_left / $parent.width() * 100;\n          percent = Math.min(90, Math.max(10, percent));\n          $first.css('right', 100 - percent + '%');\n          $second.css('left', percent + '%');\n          x = pageX;\n          app.getTracerManager().resize();\n          $('.files_bar > .wrapper').scroll();\n        }\n      });\n\n      $(document).mouseup(function (e) {\n        dragging = false;\n      });\n    })();\n  } else {\n    (function () {\n\n      $divider.addClass('horizontal');\n      var _top = -thickness / 2;\n      $divider.css({\n        top: _top,\n        height: thickness,\n        left: 0,\n        right: 0\n      });\n\n      var y = void 0;\n      $divider.mousedown(function (_ref3) {\n        var pageY = _ref3.pageY;\n\n        y = pageY;\n        dragging = true;\n      });\n\n      $(document).mousemove(function (_ref4) {\n        var pageY = _ref4.pageY;\n\n        if (dragging) {\n          var new_top = $second.position().top + pageY - y;\n          var percent = new_top / $parent.height() * 100;\n          percent = Math.min(90, Math.max(10, percent));\n          $first.css('bottom', 100 - percent + '%');\n          $second.css('top', percent + '%');\n          y = pageY;\n          app.getTracerManager().resize();\n        }\n      });\n\n      $(document).mouseup(function (e) {\n        dragging = false;\n      });\n    })();\n  }\n\n  $second.append($divider);\n};\n\nmodule.exports = function () {\n  var dividers = [['v', $('.sidemenu'), $('.workspace')], ['v', $('.viewer_container'), $('.editor_container')], ['h', $('.data_container'), $('.code_container')]];\n  for (var i = 0; i < dividers.length; i++) {\n    addDividerToDom(dividers[i]);\n  }\n};\n\n},{\"../../app\":3}],10:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n  $(document).on('click', 'a', function (e) {\n    console.log(e);\n    e.preventDefault();\n    if (!window.open($(this).attr('href'), '_blank')) {\n      alert('Please allow popups for this site');\n    }\n  });\n\n  $(document).mouseup(function (e) {\n    app.getTracerManager().command('mouseup', e);\n  });\n};\n\n},{\"../../app\":3}],11:[function(require,module,exports){\n'use strict';\n\nvar definitelyBigger = function definitelyBigger(x, y) {\n  return x > y + 2;\n};\n\nmodule.exports = function () {\n\n  $('.files_bar > .btn-left').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $($wrapper.children('button').get().reverse()).each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (0 > left) {\n        $wrapper.scrollLeft(scrollLeft + right - clipWidth);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .btn-right').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $wrapper.children('button').each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (clipWidth < right) {\n        $wrapper.scrollLeft(scrollLeft + left);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .wrapper').scroll(function () {\n\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var $left = $wrapper.children('button:first-child');\n    var $right = $wrapper.children('button:last-child');\n    var left = $left.position().left;\n    var right = $right.position().left + $right.outerWidth();\n\n    if (definitelyBigger(0, left) && definitelyBigger(clipWidth, right)) {\n      var scrollLeft = $wrapper.scrollLeft();\n      $wrapper.scrollLeft(scrollLeft + clipWidth - right);\n      return;\n    }\n\n    var lefter = definitelyBigger(0, left);\n    var righter = definitelyBigger(right, clipWidth);\n    $wrapper.toggleClass('shadow-left', lefter);\n    $wrapper.toggleClass('shadow-right', righter);\n    $('.files_bar > .btn-left').attr('disabled', !lefter);\n    $('.files_bar > .btn-right').attr('disabled', !righter);\n  });\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../../app');\nvar Toast = require('../toast');\n\nvar parseFloat = Number.parseFloat;\n\n\nvar minInterval = 0.1;\nvar maxInterval = 10;\nvar startInterval = 0.5;\nvar stepInterval = 0.1;\n\nvar normalize = function normalize(sec) {\n\n  var interval = void 0;\n  var message = void 0;\n  if (sec < minInterval) {\n    interval = minInterval;\n    message = 'Interval of ' + sec + ' seconds is too low. Setting to min allowed interval of ' + minInterval + ' second(s).';\n  } else if (sec > maxInterval) {\n    interval = maxInterval;\n    message = 'Interval of ' + sec + ' seconds is too high. Setting to max allowed interval of ' + maxInterval + ' second(s).';\n  } else {\n    interval = sec;\n    message = 'Interval has been set to ' + sec + ' second(s).';\n  }\n\n  return [interval, message];\n};\n\nmodule.exports = function () {\n\n  var $interval = $('#interval');\n  $interval.val(startInterval);\n  $interval.attr({\n    max: maxInterval,\n    min: minInterval,\n    step: stepInterval\n  });\n\n  $('#interval').on('change', function () {\n    var tracerManager = app.getTracerManager();\n\n    var _normalize = normalize(parseFloat($(this).val()));\n\n    var _normalize2 = _slicedToArray(_normalize, 2);\n\n    var seconds = _normalize2[0];\n    var message = _normalize2[1];\n\n\n    $(this).val(seconds);\n    tracerManager.interval = seconds * 1000;\n    Toast.showInfoToast(message);\n  });\n};\n\n},{\"../../app\":3,\"../toast\":23}],13:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n\n  var $module_container = $('.module_container');\n\n  $module_container.on('mousedown', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousedown(e);\n  });\n\n  $module_container.on('mousemove', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousemove(e);\n  });\n\n  $module_container.on('DOMMouseScroll mousewheel', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousewheel(e);\n  });\n};\n\n},{\"../../app\":3}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n  $('#powered-by').click(function () {\n    $('#powered-by-list button').toggleClass('collapse');\n  });\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\nvar Server = require('../../server');\nvar showAlgorithm = require('../show_algorithm');\n\nmodule.exports = function () {\n  $('#scratch-paper').click(function () {\n    var category = 'scratch';\n    var algorithm = app.getLoadedScratch();\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n};\n\n},{\"../../app\":3,\"../../server\":53,\"../show_algorithm\":19}],16:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nvar sidemenu_percent = void 0;\n\nmodule.exports = function () {\n  $('#navigation').click(function () {\n    var $sidemenu = $('.sidemenu');\n    var $workspace = $('.workspace');\n\n    $sidemenu.toggleClass('active');\n    $('.nav-dropdown').toggleClass('fa-caret-down fa-caret-up');\n\n    if ($sidemenu.hasClass('active')) {\n      $sidemenu.css('right', 100 - sidemenu_percent + '%');\n      $workspace.css('left', sidemenu_percent + '%');\n    } else {\n      sidemenu_percent = $workspace.position().left / $('body').width() * 100;\n      $sidemenu.css('right', 0);\n      $workspace.css('left', 0);\n    }\n\n    app.getTracerManager().resize();\n  });\n};\n\n},{\"../../app\":3}],17:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\nvar Server = require('../../server');\nvar Toast = require('../toast');\n\nmodule.exports = function () {\n\n  // shared\n  $('#shared').mouseup(function () {\n    $(this).select();\n  });\n\n  $('#btn_share').click(function () {\n\n    var $icon = $(this).find('.fa-share');\n    $icon.addClass('fa-spin fa-spin-faster');\n\n    Server.shareScratchPaper().then(function (url) {\n      $icon.removeClass('fa-spin fa-spin-faster');\n      $('#shared').removeClass('collapse');\n      $('#shared').val(url);\n      Toast.showInfoToast('Shareable link is created.');\n    });\n  });\n\n  // control\n\n  $('#btn_run').click(function () {\n    $('#btn_trace').click();\n    var err = app.getEditor().execute();\n    if (err) {\n      console.error(err);\n      Toast.showErrorToast(err);\n    }\n  });\n  $('#btn_pause').click(function () {\n    if (app.getTracerManager().isPause()) {\n      app.getTracerManager().resumeStep();\n    } else {\n      app.getTracerManager().pauseStep();\n    }\n  });\n  $('#btn_prev').click(function () {\n    app.getTracerManager().pauseStep();\n    app.getTracerManager().prevStep();\n  });\n  $('#btn_next').click(function () {\n    app.getTracerManager().pauseStep();\n    app.getTracerManager().nextStep();\n  });\n\n  // description & trace\n\n  $('#btn_desc').click(function () {\n    $('.tab_container > .tab').removeClass('active');\n    $('#tab_desc').addClass('active');\n    $('.tab_bar > button').removeClass('active');\n    $(this).addClass('active');\n  });\n\n  $('#btn_trace').click(function () {\n    $('.tab_container > .tab').removeClass('active');\n    $('#tab_module').addClass('active');\n    $('.tab_bar > button').removeClass('active');\n    $(this).addClass('active');\n  });\n};\n\n},{\"../../app\":3,\"../../server\":53,\"../toast\":23}],18:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n  $(window).resize(function () {\n    app.getTracerManager().resize();\n  });\n};\n\n},{\"../../app\":3}],19:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\n\nvar _require = require('../utils');\n\nvar isScratchPaper = _require.isScratchPaper;\n\n\nvar showDescription = require('./show_description');\nvar addFiles = require('./add_files');\n\nmodule.exports = function (category, algorithm, data, requestedFile) {\n  var $menu = void 0;\n  var category_name = void 0;\n  var algorithm_name = void 0;\n\n  if (isScratchPaper(category)) {\n    $menu = $('#scratch-paper');\n    category_name = 'Scratch Paper';\n    algorithm_name = algorithm ? 'Shared' : 'Temporary';\n  } else {\n    $menu = $('[data-category=\"' + category + '\"][data-algorithm=\"' + algorithm + '\"]');\n    var categoryObj = app.getCategory(category);\n    category_name = categoryObj.name;\n    algorithm_name = categoryObj.list[algorithm];\n  }\n\n  $('.sidemenu button').removeClass('active');\n  $menu.addClass('active');\n\n  $('#category').html(category_name);\n  $('#algorithm').html(algorithm_name);\n  $('#tab_desc > .wrapper').empty();\n  $('.files_bar > .wrapper').empty();\n  $('#explanation').html('');\n\n  app.setLastFileUsed(null);\n  app.getEditor().clearContent();\n\n  var files = data.files;\n\n\n  delete data.files;\n\n  showDescription(data);\n  addFiles(category, algorithm, files, requestedFile);\n};\n\n},{\"../app\":3,\"../utils\":65,\"./add_files\":5,\"./show_description\":20}],20:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar isArray = Array.isArray;\nvar _$ = $;\nvar each = _$.each;\n\n\nmodule.exports = function (data) {\n  var $container = $('#tab_desc > .wrapper');\n  $container.empty();\n\n  each(data, function (key, value) {\n\n    if (key) {\n      $container.append($('<h3>').html(key));\n    }\n\n    if (typeof value === 'string') {\n      $container.append($('<p>').html(value));\n    } else if (isArray(value)) {\n      (function () {\n\n        var $ul = $('<ul>');\n        $container.append($ul);\n\n        value.forEach(function (li) {\n          $ul.append($('<li>').html(li));\n        });\n      })();\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      (function () {\n\n        var $ul = $('<ul>');\n        $container.append($ul);\n\n        each(value, function (prop) {\n          $ul.append($('<li>').append($('<strong>').html(prop)).append(' ' + value[prop]));\n        });\n      })();\n    }\n  });\n};\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\n// click the first algorithm in the first category\n\nmodule.exports = function () {\n  $('#list button.category').first().click();\n  $('#list button.category + .indent').first().click();\n};\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../server');\nvar showAlgorithm = require('./show_algorithm');\n\nmodule.exports = function (category, algorithm, file) {\n  $('.category[data-category=\"' + category + '\"]').click();\n  Server.loadAlgorithm(category, algorithm).then(function (data) {\n    showAlgorithm(category, algorithm, data, file);\n  });\n};\n\n},{\"../server\":53,\"./show_algorithm\":19}],23:[function(require,module,exports){\n'use strict';\n\nvar showToast = function showToast(data, type) {\n  var $toast = $('<div class=\"toast ' + type + '\">').append(data);\n\n  $('.toast_container').append($toast);\n  setTimeout(function () {\n    $toast.fadeOut(function () {\n      $toast.remove();\n    });\n  }, 3000);\n};\n\nvar showErrorToast = function showErrorToast(err) {\n  showToast(err, 'error');\n};\n\nvar showInfoToast = function showInfoToast(err) {\n  showToast(err, 'info');\n};\n\nmodule.exports = {\n  showErrorToast: showErrorToast,\n  showInfoToast: showInfoToast\n};\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function (id) {\n  var editor = ace.edit(id);\n\n  editor.setOptions({\n    enableBasicAutocompletion: true,\n    enableSnippets: true,\n    enableLiveAutocompletion: true\n  });\n\n  editor.setTheme('ace/theme/tomorrow_night_eighties');\n  editor.session.setMode('ace/mode/javascript');\n  editor.$blockScrolling = Infinity;\n\n  return editor;\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nvar execute = function execute(tracerManager, code) {\n  // all modules available to eval are obtained from window\n  try {\n    tracerManager.deallocateAll();\n    eval(code);\n    tracerManager.visualize();\n  } catch (err) {\n    return err;\n  } finally {\n    tracerManager.removeUnallocated();\n  }\n};\n\nvar executeData = function executeData(tracerManager, algoData) {\n  return execute(tracerManager, algoData);\n};\n\nvar executeDataAndCode = function executeDataAndCode(tracerManager, algoData, algoCode) {\n  return execute(tracerManager, algoData + ';' + algoCode);\n};\n\nmodule.exports = {\n  executeData: executeData,\n  executeDataAndCode: executeDataAndCode\n};\n\n},{}],26:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar createEditor = require('./create');\nvar Executor = require('./executor');\n\nfunction Editor(tracerManager) {\n  var _this = this;\n\n  if (!tracerManager) {\n    throw 'Cannot create Editor. Missing the tracerManager';\n  }\n\n  ace.require('ace/ext/language_tools');\n\n  this.dataEditor = createEditor('data');\n  this.codeEditor = createEditor('code');\n\n  // Setting data\n\n  this.setData = function (data) {\n    _this.dataEditor.setValue(data, -1);\n  };\n\n  this.setCode = function (code) {\n    _this.codeEditor.setValue(code, -1);\n  };\n\n  this.setContent = function (_ref) {\n    var data = _ref.data;\n    var code = _ref.code;\n\n    _this.setData(data);\n    _this.setCode(code);\n  };\n\n  // Clearing data\n\n  this.clearData = function () {\n    _this.dataEditor.setValue('');\n  };\n\n  this.clearCode = function () {\n    _this.codeEditor.setValue('');\n  };\n\n  this.clearContent = function () {\n    _this.clearData();\n    _this.clearCode();\n  };\n\n  this.execute = function () {\n    var data = _this.dataEditor.getValue();\n    var code = _this.codeEditor.getValue();\n    return Executor.executeDataAndCode(tracerManager, data, code);\n  };\n\n  // listeners\n\n  this.dataEditor.on('change', function () {\n    var data = _this.dataEditor.getValue();\n    var lastFileUsed = app.getLastFileUsed();\n    if (lastFileUsed) {\n      app.updateCachedFile(lastFileUsed, {\n        data: data\n      });\n    }\n    Executor.executeData(tracerManager, data);\n  });\n\n  this.codeEditor.on('change', function () {\n    var code = _this.codeEditor.getValue();\n    var lastFileUsed = app.getLastFileUsed();\n    if (lastFileUsed) {\n      app.updateCachedFile(lastFileUsed, {\n        code: code\n      });\n    }\n  });\n};\n\nmodule.exports = Editor;\n\n},{\"../app\":3,\"./create\":24,\"./executor\":25}],27:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('./app');\nvar AppConstructor = require('./app/constructor');\nvar DOM = require('./dom');\nvar Server = require('./server');\n\nvar modules = require('./module');\n\nvar _$ = $;\nvar extend = _$.extend;\n\n\n$.ajaxSetup({\n  cache: false,\n  dataType: 'text'\n});\n\nvar _require = require('./utils');\n\nvar isScratchPaper = _require.isScratchPaper;\n\nvar _require2 = require('./server/helpers');\n\nvar getPath = _require2.getPath;\n\n// set global promise error handler\n\nRSVP.on('error', function (reason) {\n  console.assert(false, reason);\n});\n\n$(function () {\n\n  // initialize the application and attach in to the instance module\n  var appConstructor = new AppConstructor();\n  extend(true, app, appConstructor);\n\n  // load modules to the global scope so they can be evaled\n  extend(true, window, modules);\n\n  Server.loadCategories().then(function (data) {\n    app.setCategories(data);\n    DOM.addCategories();\n\n    // determine if the app is loading a pre-existing scratch-pad\n    // or the home page\n\n    var _getPath = getPath();\n\n    var category = _getPath.category;\n    var algorithm = _getPath.algorithm;\n    var file = _getPath.file;\n\n    if (isScratchPaper(category)) {\n      if (algorithm) {\n        Server.loadScratchPaper(algorithm).then(function (_ref) {\n          var category = _ref.category;\n          var algorithm = _ref.algorithm;\n          var data = _ref.data;\n\n          DOM.showAlgorithm(category, algorithm, data);\n        });\n      } else {\n        Server.loadAlgorithm(category).then(function (data) {\n          DOM.showAlgorithm(category, null, data);\n        });\n      }\n    } else if (category && algorithm) {\n      DOM.showRequestedAlgorithm(category, algorithm, file);\n    } else {\n      DOM.showFirstAlgorithm();\n    }\n  });\n});\n\n},{\"./app\":3,\"./app/constructor\":2,\"./dom\":6,\"./module\":36,\"./server\":53,\"./server/helpers\":52,\"./utils\":65,\"rsvp\":67}],28:[function(require,module,exports){\n'use strict';\n\nvar Array2D = require('./array2d');\n\nvar random = function random(N, min, max) {\n  return Array2D.random(1, N, min, max)[0];\n};\n\nvar randomSorted = function randomSorted(N, min, max) {\n  return Array2D.randomSorted(1, N, min, max)[0];\n};\n\nmodule.exports = {\n  random: random,\n  randomSorted: randomSorted\n};\n\n},{\"./array2d\":29}],29:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, M, min, max) {\n  if (!N) N = 10;\n  if (!M) M = 10;\n  if (min === undefined) min = 1;\n  if (max === undefined) max = 9;\n  var D = [];\n  for (var i = 0; i < N; i++) {\n    D.push([]);\n    for (var j = 0; j < M; j++) {\n      D[i].push((Math.random() * (max - min + 1) | 0) + min);\n    }\n  }\n  return D;\n};\n\nvar randomSorted = function randomSorted(N, M, min, max) {\n  return undefined.random(N, M, min, max).map(function (arr) {\n    return arr.sort(function (a, b) {\n      return a - b;\n    });\n  });\n};\n\nmodule.exports = {\n  random: random,\n  randomSorted: randomSorted\n};\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, min, max) {\n  if (!N) N = 7;\n  if (!min) min = 1;\n  if (!max) max = 10;\n  var C = new Array(N);\n  for (var i = 0; i < N; i++) {\n    C[i] = new Array(2);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < C[i].length; j++) {\n      C[i][j] = (Math.random() * (max - min + 1) | 0) + min;\n    }\n  }return C;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, ratio) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n    for (var j = 0; j < N; j++) {\n      if (i != j) {\n        G[i][j] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nvar Array1D = require('./array1d');\nvar Array2D = require('./array2d');\nvar CoordinateSystem = require('./coordinate_system');\nvar DirectedGraph = require('./directed_graph');\nvar UndirectedGraph = require('./undirected_graph');\nvar WeightedDirectedGraph = require('./weighted_directed_graph');\nvar WeightedUndirectedGraph = require('./weighted_undirected_graph');\n\nmodule.exports = {\n  Array1D: Array1D,\n  Array2D: Array2D,\n  CoordinateSystem: CoordinateSystem,\n  DirectedGraph: DirectedGraph,\n  UndirectedGraph: UndirectedGraph,\n  WeightedDirectedGraph: WeightedDirectedGraph,\n  WeightedUndirectedGraph: WeightedUndirectedGraph\n};\n\n},{\"./array1d\":28,\"./array2d\":29,\"./coordinate_system\":30,\"./directed_graph\":31,\"./undirected_graph\":33,\"./weighted_directed_graph\":34,\"./weighted_undirected_graph\":35}],33:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, ratio) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (i > j) {\n        G[i][j] = G[j][i] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, ratio, min, max) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  if (!min) min = 1;\n  if (!max) max = 5;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n    for (var j = 0; j < N; j++) {\n      if (i != j && (Math.random() * (1 / ratio) | 0) == 0) {\n        G[i][j] = (Math.random() * (max - min + 1) | 0) + min;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\n\nvar random = function random(N, ratio, min, max) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  if (!min) min = 1;\n  if (!max) max = 5;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (i > j && (Math.random() * (1 / ratio) | 0) == 0) {\n        G[i][j] = G[j][i] = (Math.random() * (max - min + 1) | 0) + min;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nvar tracers = require('./tracer');\nvar datas = require('./data');\n\nvar _$ = $;\nvar extend = _$.extend;\n\n\nmodule.exports = extend(true, {}, tracers, datas);\n\n},{\"./data\":32,\"./tracer\":42}],37:[function(require,module,exports){\n\"use strict\";\n\nvar Array2DTracer = require('./array2d');\n\nfunction Array1DTracer() {\n  return Array2DTracer.apply(this, arguments);\n}\n\nArray1DTracer.prototype = $.extend(true, Object.create(Array2DTracer.prototype), {\n  constructor: Array1DTracer,\n  name: \"Array1DTracer\",\n  _notify: function _notify(idx, v) {\n    Array2DTracer.prototype._notify.call(this, 0, idx, v);\n    return this;\n  },\n  _denotify: function _denotify(idx) {\n    Array2DTracer.prototype._denotify.call(this, 0, idx);\n    return this;\n  },\n  _select: function _select(s, e) {\n    if (e === undefined) {\n      Array2DTracer.prototype._select.call(this, 0, s);\n    } else {\n      Array2DTracer.prototype._selectRow.call(this, 0, s, e);\n    }\n    return this;\n  },\n  _deselect: function _deselect(s, e) {\n    if (e === undefined) {\n      Array2DTracer.prototype._deselect.call(this, 0, s);\n    } else {\n      Array2DTracer.prototype._deselectRow.call(this, 0, s, e);\n    }\n    return this;\n  },\n  setData: function setData(D) {\n    return Array2DTracer.prototype.setData.call(this, [D]);\n  }\n});\n\nmodule.exports = Array1DTracer;\n\n},{\"./array2d\":38}],38:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nvar _require = require('../../tracer_manager/util/index');\n\nvar refineByType = _require.refineByType;\n\n\nfunction Array2DTracer() {\n  if (Tracer.apply(this, arguments)) {\n    Array2DTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nArray2DTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n  constructor: Array2DTracer,\n  name: 'Array2DTracer',\n  init: function init() {\n    this.$table = this.capsule.$table = $('<div class=\"mtbl-table\">');\n    this.$container.append(this.$table);\n  },\n  _notify: function _notify(x, y, v) {\n    this.manager.pushStep(this.capsule, {\n      type: 'notify',\n      x: x,\n      y: y,\n      v: v\n    });\n    return this;\n  },\n  _denotify: function _denotify(x, y) {\n    this.manager.pushStep(this.capsule, {\n      type: 'denotify',\n      x: x,\n      y: y\n    });\n    return this;\n  },\n  _select: function _select(sx, sy, ex, ey) {\n    this.pushSelectingStep('select', null, arguments);\n    return this;\n  },\n  _selectRow: function _selectRow(x, sy, ey) {\n    this.pushSelectingStep('select', 'row', arguments);\n    return this;\n  },\n  _selectCol: function _selectCol(y, sx, ex) {\n    this.pushSelectingStep('select', 'col', arguments);\n    return this;\n  },\n  _deselect: function _deselect(sx, sy, ex, ey) {\n    this.pushSelectingStep('deselect', null, arguments);\n    return this;\n  },\n  _deselectRow: function _deselectRow(x, sy, ey) {\n    this.pushSelectingStep('deselect', 'row', arguments);\n    return this;\n  },\n  _deselectCol: function _deselectCol(y, sx, ex) {\n    this.pushSelectingStep('deselect', 'col', arguments);\n    return this;\n  },\n  _separate: function _separate(x, y) {\n    this.manager.pushStep(this.capsule, {\n      type: 'separate',\n      x: x,\n      y: y\n    });\n    return this;\n  },\n  _separateRow: function _separateRow(x) {\n    this._separate(x, -1);\n    return this;\n  },\n  _separateCol: function _separateCol(y) {\n    this._separate(-1, y);\n    return this;\n  },\n  _deseparate: function _deseparate(x, y) {\n    this.manager.pushStep(this.capsule, {\n      type: 'deseparate',\n      x: x,\n      y: y\n    });\n    return this;\n  },\n  _deseparateRow: function _deseparateRow(x) {\n    this._deseparate(x, -1);\n    return this;\n  },\n  _deseparateCol: function _deseparateCol(y) {\n    this._deseparate(-1, y);\n    return this;\n  },\n  pushSelectingStep: function pushSelectingStep() {\n    var args = Array.prototype.slice.call(arguments);\n    var type = args.shift();\n    var mode = args.shift();\n    args = Array.prototype.slice.call(args.shift());\n    var coord;\n    switch (mode) {\n      case 'row':\n        coord = {\n          x: args[0],\n          sy: args[1],\n          ey: args[2]\n        };\n        break;\n      case 'col':\n        coord = {\n          y: args[0],\n          sx: args[1],\n          ex: args[2]\n        };\n        break;\n      default:\n        if (args[2] === undefined && args[3] === undefined) {\n          coord = {\n            x: args[0],\n            y: args[1]\n          };\n        } else {\n          coord = {\n            sx: args[0],\n            sy: args[1],\n            ex: args[2],\n            ey: args[3]\n          };\n        }\n    }\n    var step = {\n      type: type\n    };\n    $.extend(step, coord);\n    this.manager.pushStep(this.capsule, step);\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'notify':\n        if (step.v !== undefined) {\n          var $row = this.$table.find('.mtbl-row').eq(step.x);\n          var $col = $row.find('.mtbl-col').eq(step.y);\n          $col.text(refineByType(step.v));\n        }\n      case 'denotify':\n      case 'select':\n      case 'deselect':\n        var colorClass = step.type == 'select' || step.type == 'deselect' ? this.colorClass.selected : this.colorClass.notified;\n        var addClass = step.type == 'select' || step.type == 'notify';\n        var sx = step.sx;\n        var sy = step.sy;\n        var ex = step.ex;\n        var ey = step.ey;\n        if (sx === undefined) sx = step.x;\n        if (sy === undefined) sy = step.y;\n        if (ex === undefined) ex = step.x;\n        if (ey === undefined) ey = step.y;\n        this.paintColor(sx, sy, ex, ey, colorClass, addClass);\n        break;\n      case 'separate':\n        this.deseparate(step.x, step.y);\n        this.separate(step.x, step.y);\n        break;\n      case 'deseparate':\n        this.deseparate(step.x, step.y);\n        break;\n      default:\n        Tracer.prototype.processStep.call(this, step, options);\n    }\n  },\n  setData: function setData(D) {\n    this.viewX = this.viewY = 0;\n    this.paddingH = 6;\n    this.paddingV = 3;\n    this.fontSize = 16;\n\n    if (Tracer.prototype.setData.apply(this, arguments)) {\n      this.$table.find('.mtbl-row').each(function (i) {\n        $(this).find('.mtbl-col').each(function (j) {\n          $(this).text(refineByType(D[i][j]));\n        });\n      });\n      return true;\n    }\n\n    this.$table.empty();\n    for (var i = 0; i < D.length; i++) {\n      var $row = $('<div class=\"mtbl-row\">');\n      this.$table.append($row);\n      for (var j = 0; j < D[i].length; j++) {\n        var $col = $('<div class=\"mtbl-col\">').css(this.getCellCss()).text(refineByType(D[i][j]));\n        $row.append($col);\n      }\n    }\n    this.resize();\n\n    return false;\n  },\n  resize: function resize() {\n    Tracer.prototype.resize.call(this);\n\n    this.refresh();\n  },\n  clear: function clear() {\n    Tracer.prototype.clear.call(this);\n\n    this.clearColor();\n    this.deseparateAll();\n  },\n  getCellCss: function getCellCss() {\n    return {\n      padding: this.paddingV.toFixed(1) + 'px ' + this.paddingH.toFixed(1) + 'px',\n      'font-size': this.fontSize.toFixed(1) + 'px'\n    };\n  },\n  refresh: function refresh() {\n    Tracer.prototype.refresh.call(this);\n\n    var $parent = this.$table.parent();\n    var top = $parent.height() / 2 - this.$table.height() / 2 + this.viewY;\n    var left = $parent.width() / 2 - this.$table.width() / 2 + this.viewX;\n    this.$table.css('margin-top', top);\n    this.$table.css('margin-left', left);\n  },\n  mousedown: function mousedown(e) {\n    Tracer.prototype.mousedown.call(this, e);\n\n    this.dragX = e.pageX;\n    this.dragY = e.pageY;\n    this.dragging = true;\n  },\n  mousemove: function mousemove(e) {\n    Tracer.prototype.mousemove.call(this, e);\n\n    if (this.dragging) {\n      this.viewX += e.pageX - this.dragX;\n      this.viewY += e.pageY - this.dragY;\n      this.dragX = e.pageX;\n      this.dragY = e.pageY;\n      this.refresh();\n    }\n  },\n  mouseup: function mouseup(e) {\n    Tracer.prototype.mouseup.call(this, e);\n\n    this.dragging = false;\n  },\n  mousewheel: function mousewheel(e) {\n    Tracer.prototype.mousewheel.call(this, e);\n\n    e.preventDefault();\n    e = e.originalEvent;\n    var delta = e.wheelDelta !== undefined && e.wheelDelta || e.detail !== undefined && -e.detail;\n    var weight = 1.01;\n    var ratio = delta > 0 ? 1 / weight : weight;\n    if (this.fontSize < 4 && ratio < 1) return;\n    if (this.fontSize > 40 && ratio > 1) return;\n    this.paddingV *= ratio;\n    this.paddingH *= ratio;\n    this.fontSize *= ratio;\n    this.$table.find('.mtbl-col').css(this.getCellCss());\n    this.refresh();\n  },\n  paintColor: function paintColor(sx, sy, ex, ey, colorClass, addClass) {\n    for (var i = sx; i <= ex; i++) {\n      var $row = this.$table.find('.mtbl-row').eq(i);\n      for (var j = sy; j <= ey; j++) {\n        var $col = $row.find('.mtbl-col').eq(j);\n        if (addClass) $col.addClass(colorClass);else $col.removeClass(colorClass);\n      }\n    }\n  },\n  clearColor: function clearColor() {\n    this.$table.find('.mtbl-col').removeClass(Object.keys(this.colorClass).join(' '));\n  },\n  colorClass: {\n    selected: 'selected',\n    notified: 'notified'\n  },\n  separate: function separate(x, y) {\n    this.$table.find('.mtbl-row').each(function (i) {\n      var $row = $(this);\n      if (i == x) {\n        $row.after($('<div class=\"mtbl-empty-row\">').attr('data-row', i));\n      }\n      $row.find('.mtbl-col').each(function (j) {\n        var $col = $(this);\n        if (j == y) {\n          $col.after($('<div class=\"mtbl-empty-col\">').attr('data-col', j));\n        }\n      });\n    });\n  },\n  deseparate: function deseparate(x, y) {\n    this.$table.find('[data-row=' + x + ']').remove();\n    this.$table.find('[data-col=' + y + ']').remove();\n  },\n  deseparateAll: function deseparateAll() {\n    this.$table.find('.mtbl-empty-row, .mtbl-empty-col').remove();\n  }\n});\n\nmodule.exports = Array2DTracer;\n\n},{\"../../tracer_manager/util/index\":62,\"./tracer\":44}],39:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction ChartTracer() {\n  if (Tracer.apply(this, arguments)) {\n    ChartTracer.prototype.init.call(this, arguments);\n    return true;\n  }\n  return false;\n}\n\nChartTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n  constructor: ChartTracer,\n  name: 'ChartTracer',\n  init: function init() {\n    this.$wrapper = this.capsule.$wrapper = $('<canvas id=\"chart\">');\n    this.$container.append(this.$wrapper);\n  },\n  setData: function setData(C) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n    var tracer = this;\n    var color = [];\n    for (var i = 0; i < C.length; i++) {\n      color.push('rgba(136, 136, 136, 1)');\n    }var data = {\n      type: 'bar',\n      data: {\n        labels: C.map(String),\n        datasets: [{\n          backgroundColor: color,\n          data: C\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n    this.chart = this.capsule.chart = new Chart(this.$wrapper, data);\n  },\n  _notify: function _notify(s, v) {\n    this.manager.pushStep(this.capsule, {\n      type: 'notify',\n      s: s,\n      v: v\n    });\n    return this;\n  },\n  _denotify: function _denotify(s) {\n    this.manager.pushStep(this.capsule, {\n      type: 'denotify',\n      s: s\n    });\n    return this;\n  },\n  _select: function _select(s, e) {\n    this.manager.pushStep(this.capsule, {\n      type: 'select',\n      s: s,\n      e: e\n    });\n    return this;\n  },\n  _deselect: function _deselect(s, e) {\n    this.manager.pushStep(this.capsule, {\n      type: 'deselect',\n      s: s,\n      e: e\n    });\n    return this;\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'notify':\n        if (step.v !== undefined) {\n          this.chart.config.data.datasets[0].data[step.s] = step.v;\n          this.chart.config.data.labels[step.s] = step.v.toString();\n        }\n      case 'denotify':\n      case 'deselect':\n        var color = step.type == 'denotify' || step.type == 'deselect' ? 'rgba(136, 136, 136, 1)' : 'rgba(255, 0, 0, 1)';\n      case 'select':\n        if (color === undefined) var color = 'rgba(0, 0, 255, 1)';\n        if (step.e !== undefined) for (var i = step.s; i <= step.e; i++) {\n          this.chart.config.data.datasets[0].backgroundColor[i] = color;\n        } else this.chart.config.data.datasets[0].backgroundColor[step.s] = color;\n        this.chart.update();\n        break;\n      default:\n        Tracer.prototype.processStep.call(this, step, options);\n    }\n  }\n});\n\nmodule.exports = ChartTracer;\n\n},{\"./tracer\":44}],40:[function(require,module,exports){\n'use strict';\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nfunction CoordinateSystemTracer() {\n  if (DirectedGraphTracer.apply(this, arguments)) {\n    CoordinateSystemTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nCoordinateSystemTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n  constructor: CoordinateSystemTracer,\n  name: 'CoordinateSystemTracer',\n  init: function init() {\n    var tracer = this;\n\n    this.s.settings({\n      defaultEdgeType: 'def',\n      funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawEdge(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  setData: function setData(C) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n    this.graph.clear();\n    var nodes = [];\n    var edges = [];\n    for (var i = 0; i < C.length; i++) {\n      nodes.push({\n        id: this.n(i),\n        x: C[i][0],\n        y: C[i][1],\n        label: '' + i,\n        size: 1,\n        color: this.color.default\n      });\n    }this.graph.read({\n      nodes: nodes,\n      edges: edges\n    });\n    this.s.camera.goTo({\n      x: 0,\n      y: 0,\n      angle: 0,\n      ratio: 1\n    });\n    this.refresh();\n\n    return false;\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'visit':\n      case 'leave':\n        var visit = step.type == 'visit';\n        var targetNode = this.graph.nodes(this.n(step.target));\n        var color = visit ? this.color.visited : this.color.left;\n        targetNode.color = color;\n        if (step.source !== undefined) {\n          var edgeId = this.e(step.source, step.target);\n          if (this.graph.edges(edgeId)) {\n            var edge = this.graph.edges(edgeId);\n            edge.color = color;\n            this.graph.dropEdge(edgeId).addEdge(edge);\n          } else {\n            this.graph.addEdge({\n              id: this.e(step.target, step.source),\n              source: this.n(step.source),\n              target: this.n(step.target),\n              color: color,\n              size: 1\n            });\n          }\n        }\n        if (this.logTracer) {\n          var source = step.source;\n          if (source === undefined) source = '';\n          this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n        }\n        break;\n      default:\n        Tracer.prototype.processStep.call(this, step, options);\n    }\n  },\n  e: function e(v1, v2) {\n    if (v1 > v2) {\n      var temp = v1;\n      v1 = v2;\n      v2 = temp;\n    }\n    return 'e' + v1 + '_' + v2;\n  },\n  drawOnHover: function drawOnHover(node, context, settings, next) {\n    var tracer = this;\n\n    context.setLineDash([5, 5]);\n    var nodeIdx = node.id.substring(1);\n    this.graph.edges().forEach(function (edge) {\n      var ends = edge.id.substring(1).split(\"_\");\n      if (ends[0] == nodeIdx) {\n        var color = '#0ff';\n        var source = node;\n        var target = tracer.graph.nodes('n' + ends[1]);\n        tracer.drawEdge(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      } else if (ends[1] == nodeIdx) {\n        var color = '#0ff';\n        var source = tracer.graph.nodes('n' + ends[0]);\n        var target = node;\n        tracer.drawEdge(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  drawEdge: function drawEdge(edge, source, target, color, context, settings) {\n    var prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1;\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n    context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n    context.stroke();\n  }\n});\n\nmodule.exports = CoordinateSystemTracer;\n\n},{\"./directed_graph\":41}],41:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction DirectedGraphTracer() {\n  if (Tracer.apply(this, arguments)) {\n    DirectedGraphTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nDirectedGraphTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n  constructor: DirectedGraphTracer,\n  name: 'DirectedGraphTracer',\n  init: function init() {\n    var tracer = this;\n\n    this.s = this.capsule.s = new sigma({\n      renderer: {\n        container: this.$container[0],\n        type: 'canvas'\n      },\n      settings: {\n        minArrowSize: 8,\n        defaultEdgeType: 'arrow',\n        maxEdgeSize: 2.5,\n        labelThreshold: 4,\n        font: 'Roboto',\n        defaultLabelColor: '#fff',\n        zoomMin: 0.6,\n        zoomMax: 1.2,\n        skipErrors: true,\n        minNodeSize: .5,\n        maxNodeSize: 12,\n        labelSize: 'proportional',\n        labelSizeRatio: 1.3,\n        funcLabelsDef: function funcLabelsDef(node, context, settings) {\n          tracer.drawLabel(node, context, settings);\n        },\n        funcHoversDef: function funcHoversDef(node, context, settings, next) {\n          tracer.drawOnHover(node, context, settings, next);\n        },\n        funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n          var color = tracer.getColor(edge, source, target, settings);\n          tracer.drawArrow(edge, source, target, color, context, settings);\n        }\n      }\n    });\n    sigma.plugins.dragNodes(this.s, this.s.renderers[0]);\n    this.graph = this.capsule.graph = this.s.graph;\n  },\n  _setTreeData: function _setTreeData(G, root) {\n    this.manager.pushStep(this.capsule, {\n      type: 'setTreeData',\n      arguments: arguments\n    });\n    return this;\n  },\n  _visit: function _visit(target, source) {\n    this.manager.pushStep(this.capsule, {\n      type: 'visit',\n      target: target,\n      source: source\n    });\n    return this;\n  },\n  _leave: function _leave(target, source) {\n    this.manager.pushStep(this.capsule, {\n      type: 'leave',\n      target: target,\n      source: source\n    });\n    return this;\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'setTreeData':\n        this.setTreeData.apply(this, step.arguments);\n        break;\n      case 'visit':\n      case 'leave':\n        var visit = step.type == 'visit';\n        var targetNode = this.graph.nodes(this.n(step.target));\n        var color = visit ? this.color.visited : this.color.left;\n        targetNode.color = color;\n        if (step.source !== undefined) {\n          var edgeId = this.e(step.source, step.target);\n          var edge = this.graph.edges(edgeId);\n          edge.color = color;\n          this.graph.dropEdge(edgeId).addEdge(edge);\n        }\n        if (this.logTracer) {\n          var source = step.source;\n          if (source === undefined) source = '';\n          this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n        }\n        break;\n      default:\n        Tracer.prototype.processStep.call(this, step, options);\n    }\n  },\n  setTreeData: function setTreeData(G, root) {\n    var tracer = this;\n\n    root = root || 0;\n    var maxDepth = -1;\n\n    var chk = new Array(G.length);\n    var getDepth = function getDepth(node, depth) {\n      if (chk[node]) throw \"the given graph is not a tree because it forms a circuit\";\n      chk[node] = true;\n      if (maxDepth < depth) maxDepth = depth;\n      for (var i = 0; i < G[node].length; i++) {\n        if (G[node][i]) getDepth(i, depth + 1);\n      }\n    };\n    getDepth(root, 1);\n\n    if (this.setData.apply(this, arguments)) return true;\n\n    var place = function place(node, x, y) {\n      var temp = tracer.graph.nodes(tracer.n(node));\n      temp.x = x;\n      temp.y = y;\n    };\n\n    var wgap = 1 / (maxDepth - 1);\n    var dfs = function dfs(node, depth, top, bottom) {\n      place(node, top + bottom, depth * wgap);\n      var children = 0;\n      for (var i = 0; i < G[node].length; i++) {\n        if (G[node][i]) children++;\n      }\n      var vgap = (bottom - top) / children;\n      var cnt = 0;\n      for (var i = 0; i < G[node].length; i++) {\n        if (G[node][i]) dfs(i, depth + 1, top + vgap * cnt, top + vgap * ++cnt);\n      }\n    };\n    dfs(root, 0, 0, 1);\n\n    this.refresh();\n  },\n  setData: function setData(G) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n    this.graph.clear();\n    var nodes = [];\n    var edges = [];\n    var unitAngle = 2 * Math.PI / G.length;\n    var currentAngle = 0;\n    for (var i = 0; i < G.length; i++) {\n      currentAngle += unitAngle;\n      nodes.push({\n        id: this.n(i),\n        label: '' + i,\n        x: .5 + Math.sin(currentAngle) / 2,\n        y: .5 + Math.cos(currentAngle) / 2,\n        size: 1,\n        color: this.color.default\n      });\n      for (var j = 0; j < G[i].length; j++) {\n        if (G[i][j]) {\n          edges.push({\n            id: this.e(i, j),\n            source: this.n(i),\n            target: this.n(j),\n            color: this.color.default,\n            size: 1\n          });\n        }\n      }\n    }\n\n    this.graph.read({\n      nodes: nodes,\n      edges: edges\n    });\n    this.s.camera.goTo({\n      x: 0,\n      y: 0,\n      angle: 0,\n      ratio: 1\n    });\n    this.refresh();\n\n    return false;\n  },\n  resize: function resize() {\n    Tracer.prototype.resize.call(this);\n\n    this.s.renderers[0].resize();\n    this.refresh();\n  },\n  refresh: function refresh() {\n    Tracer.prototype.refresh.call(this);\n\n    this.s.refresh();\n  },\n  clear: function clear() {\n    Tracer.prototype.clear.call(this);\n\n    this.clearGraphColor();\n  },\n  color: {\n    visited: '#f00',\n    left: '#000',\n    default: '#888'\n  },\n  clearGraphColor: function clearGraphColor() {\n    var tracer = this;\n\n    this.graph.nodes().forEach(function (node) {\n      node.color = tracer.color.default;\n    });\n    this.graph.edges().forEach(function (edge) {\n      edge.color = tracer.color.default;\n    });\n  },\n  n: function n(v) {\n    return 'n' + v;\n  },\n  e: function e(v1, v2) {\n    return 'e' + v1 + '_' + v2;\n  },\n  getColor: function getColor(edge, source, target, settings) {\n    var color = edge.color,\n        edgeColor = settings('edgeColor'),\n        defaultNodeColor = settings('defaultNodeColor'),\n        defaultEdgeColor = settings('defaultEdgeColor');\n    if (!color) switch (edgeColor) {\n      case 'source':\n        color = source.color || defaultNodeColor;\n        break;\n      case 'target':\n        color = target.color || defaultNodeColor;\n        break;\n      default:\n        color = defaultEdgeColor;\n        break;\n    }\n\n    return color;\n  },\n  drawLabel: function drawLabel(node, context, settings) {\n    var fontSize,\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'];\n\n    if (size < settings('labelThreshold')) return;\n\n    if (!node.label || typeof node.label !== 'string') return;\n\n    fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n    context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n    context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n    context.textAlign = 'center';\n    context.fillText(node.label, Math.round(node[prefix + 'x']), Math.round(node[prefix + 'y'] + fontSize / 3));\n  },\n  drawArrow: function drawArrow(edge, source, target, color, context, settings) {\n    var prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1,\n        tSize = target[prefix + 'size'],\n        sX = source[prefix + 'x'],\n        sY = source[prefix + 'y'],\n        tX = target[prefix + 'x'],\n        tY = target[prefix + 'y'],\n        angle = Math.atan2(tY - sY, tX - sX),\n        dist = 3;\n    sX += Math.sin(angle) * dist;\n    tX += Math.sin(angle) * dist;\n    sY += -Math.cos(angle) * dist;\n    tY += -Math.cos(angle) * dist;\n    var aSize = Math.max(size * 2.5, settings('minArrowSize')),\n        d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n        aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n        aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n        vX = (tX - sX) * aSize / d,\n        vY = (tY - sY) * aSize / d;\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(aX, aY);\n    context.stroke();\n\n    context.fillStyle = color;\n    context.beginPath();\n    context.moveTo(aX + vX, aY + vY);\n    context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n    context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n    context.lineTo(aX + vX, aY + vY);\n    context.closePath();\n    context.fill();\n  },\n  drawOnHover: function drawOnHover(node, context, settings, next) {\n    var tracer = this;\n\n    context.setLineDash([5, 5]);\n    var nodeIdx = node.id.substring(1);\n    this.graph.edges().forEach(function (edge) {\n      var ends = edge.id.substring(1).split(\"_\");\n      if (ends[0] == nodeIdx) {\n        var color = '#0ff';\n        var source = node;\n        var target = tracer.graph.nodes('n' + ends[1]);\n        tracer.drawArrow(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      } else if (ends[1] == nodeIdx) {\n        var color = '#ff0';\n        var source = tracer.graph.nodes('n' + ends[0]);\n        var target = node;\n        tracer.drawArrow(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      }\n    });\n  }\n});\n\nsigma.canvas.labels.def = function (node, context, settings) {\n  var func = settings('funcLabelsDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.hovers.def = function (node, context, settings) {\n  var func = settings('funcHoversDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.edges.def = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesDef');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\nsigma.canvas.edges.arrow = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesArrow');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\n\nmodule.exports = DirectedGraphTracer;\n\n},{\"./tracer\":44}],42:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\nvar LogTracer = require('./log');\nvar Array1DTracer = require('./array1d');\nvar Array2DTracer = require('./array2d');\nvar ChartTracer = require('./chart');\nvar CoordinateSystemTracer = require('./coordinate_system');\nvar DirectedGraphTracer = require('./directed_graph');\nvar UndirectedGraphTracer = require('./undirected_graph');\nvar WeightedDirectedGraphTracer = require('./weighted_directed_graph');\nvar WeightedUndirectedGraphTracer = require('./weighted_undirected_graph');\n\nmodule.exports = {\n  Tracer: Tracer,\n  LogTracer: LogTracer,\n  Array1DTracer: Array1DTracer,\n  Array2DTracer: Array2DTracer,\n  ChartTracer: ChartTracer,\n  CoordinateSystemTracer: CoordinateSystemTracer,\n  DirectedGraphTracer: DirectedGraphTracer,\n  UndirectedGraphTracer: UndirectedGraphTracer,\n  WeightedDirectedGraphTracer: WeightedDirectedGraphTracer,\n  WeightedUndirectedGraphTracer: WeightedUndirectedGraphTracer\n};\n\n},{\"./array1d\":37,\"./array2d\":38,\"./chart\":39,\"./coordinate_system\":40,\"./directed_graph\":41,\"./log\":43,\"./tracer\":44,\"./undirected_graph\":45,\"./weighted_directed_graph\":46,\"./weighted_undirected_graph\":47}],43:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\n\nfunction LogTracer() {\n  if (Tracer.apply(this, arguments)) {\n    LogTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nLogTracer.prototype = $.extend(true, Object.create(Tracer.prototype), {\n  constructor: LogTracer,\n  name: 'LogTracer',\n  init: function init() {\n    this.$wrapper = this.capsule.$wrapper = $('<div class=\"wrapper\">');\n    this.$container.append(this.$wrapper);\n  },\n  _print: function _print(msg) {\n    this.manager.pushStep(this.capsule, {\n      type: 'print',\n      msg: msg\n    });\n    return this;\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'print':\n        this.print(step.msg);\n        break;\n    }\n  },\n  refresh: function refresh() {\n    this.scrollToEnd(Math.min(50, this.interval));\n  },\n  clear: function clear() {\n    Tracer.prototype.clear.call(this);\n\n    this.$wrapper.empty();\n  },\n  print: function print(message) {\n    this.$wrapper.append($('<span>').append(message + '<br/>'));\n  },\n  scrollToEnd: function scrollToEnd(duration) {\n    this.$container.animate({\n      scrollTop: this.$container[0].scrollHeight\n    }, duration);\n  }\n});\n\nmodule.exports = LogTracer;\n\n},{\"./tracer\":44}],44:[function(require,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _require = require('../../tracer_manager/util/index');\n\nvar toJSON = _require.toJSON;\nvar fromJSON = _require.fromJSON;\n\n\nfunction Tracer(name) {\n  this.module = this.constructor;\n  this.capsule = this.manager.allocate(this);\n  $.extend(this, this.capsule);\n  this.setName(name);\n  return this.isNew;\n}\n\nTracer.prototype = {\n\n  constructor: Tracer,\n  name: 'Tracer',\n  manager: null,\n\n  _setData: function _setData() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.manager.pushStep(this.capsule, {\n      type: 'setData',\n      args: toJSON(args)\n    });\n    return this;\n  },\n  _clear: function _clear() {\n    this.manager.pushStep(this.capsule, {\n      type: 'clear'\n    });\n    return this;\n  },\n  _wait: function _wait() {\n    this.manager.newStep();\n    return this;\n  },\n  processStep: function processStep(step, options) {\n    var type = step.type;\n    var args = step.args;\n\n\n    switch (type) {\n      case 'setData':\n        this.setData.apply(this, _toConsumableArray(fromJSON(args)));\n        break;\n      case 'clear':\n        this.clear();\n        break;\n    }\n  },\n  setName: function setName(name) {\n    var $name = void 0;\n    if (this.isNew) {\n      $name = $('<span class=\"name\">');\n      this.$container.append($name);\n    } else {\n      $name = this.$container.find('span.name');\n    }\n    $name.text(name || this.defaultName);\n  },\n  setData: function setData() {\n    var data = toJSON(arguments);\n    if (!this.isNew && this.lastData === data) {\n      return true;\n    }\n    this.isNew = this.capsule.isNew = false;\n    this.lastData = this.capsule.lastData = data;\n    return false;\n  },\n  resize: function resize() {},\n  refresh: function refresh() {},\n  clear: function clear() {},\n  attach: function attach(tracer) {\n    if (tracer.module === LogTracer) {\n      this.logTracer = tracer;\n    }\n    return this;\n  },\n  mousedown: function mousedown(e) {},\n  mousemove: function mousemove(e) {},\n  mouseup: function mouseup(e) {},\n  mousewheel: function mousewheel(e) {}\n};\n\nmodule.exports = Tracer;\n\n},{\"../../tracer_manager/util/index\":62}],45:[function(require,module,exports){\n'use strict';\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nfunction UndirectedGraphTracer() {\n  if (DirectedGraphTracer.apply(this, arguments)) {\n    UndirectedGraphTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nUndirectedGraphTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n  constructor: UndirectedGraphTracer,\n  name: 'UndirectedGraphTracer',\n  init: function init() {\n    var tracer = this;\n\n    this.s.settings({\n      defaultEdgeType: 'def',\n      funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawEdge(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  setData: function setData(G) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n    this.graph.clear();\n    var nodes = [];\n    var edges = [];\n    var unitAngle = 2 * Math.PI / G.length;\n    var currentAngle = 0;\n    for (var i = 0; i < G.length; i++) {\n      currentAngle += unitAngle;\n      nodes.push({\n        id: this.n(i),\n        label: '' + i,\n        x: .5 + Math.sin(currentAngle) / 2,\n        y: .5 + Math.cos(currentAngle) / 2,\n        size: 1,\n        color: this.color.default\n      });\n    }\n    for (var i = 0; i < G.length; i++) {\n      for (var j = 0; j <= i; j++) {\n        if (G[i][j] || G[j][i]) {\n          edges.push({\n            id: this.e(i, j),\n            source: this.n(i),\n            target: this.n(j),\n            color: this.color.default,\n            size: 1\n          });\n        }\n      }\n    }\n\n    this.graph.read({\n      nodes: nodes,\n      edges: edges\n    });\n    this.s.camera.goTo({\n      x: 0,\n      y: 0,\n      angle: 0,\n      ratio: 1\n    });\n    this.refresh();\n\n    return false;\n  },\n  e: function e(v1, v2) {\n    if (v1 > v2) {\n      var temp = v1;\n      v1 = v2;\n      v2 = temp;\n    }\n    return 'e' + v1 + '_' + v2;\n  },\n  drawOnHover: function drawOnHover(node, context, settings, next) {\n    var tracer = this;\n\n    context.setLineDash([5, 5]);\n    var nodeIdx = node.id.substring(1);\n    this.graph.edges().forEach(function (edge) {\n      var ends = edge.id.substring(1).split(\"_\");\n      if (ends[0] == nodeIdx) {\n        var color = '#0ff';\n        var source = node;\n        var target = tracer.graph.nodes('n' + ends[1]);\n        tracer.drawEdge(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      } else if (ends[1] == nodeIdx) {\n        var color = '#0ff';\n        var source = tracer.graph.nodes('n' + ends[0]);\n        var target = node;\n        tracer.drawEdge(edge, source, target, color, context, settings);\n        if (next) next(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  drawEdge: function drawEdge(edge, source, target, color, context, settings) {\n    var prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1;\n\n    context.strokeStyle = color;\n    context.lineWidth = size;\n    context.beginPath();\n    context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n    context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n    context.stroke();\n  }\n});\n\nmodule.exports = UndirectedGraphTracer;\n\n},{\"./directed_graph\":41}],46:[function(require,module,exports){\n'use strict';\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nvar _require = require('../../tracer_manager/util/index');\n\nvar refineByType = _require.refineByType;\n\n\nfunction WeightedDirectedGraphTracer() {\n  if (DirectedGraphTracer.apply(this, arguments)) {\n    WeightedDirectedGraphTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nWeightedDirectedGraphTracer.prototype = $.extend(true, Object.create(DirectedGraphTracer.prototype), {\n  constructor: WeightedDirectedGraphTracer,\n  name: 'WeightedDirectedGraphTracer',\n  init: function init() {\n    var tracer = this;\n\n    this.s.settings({\n      edgeLabelSize: 'proportional',\n      defaultEdgeLabelSize: 20,\n      edgeLabelSizePowRatio: 0.8,\n      funcLabelsDef: function funcLabelsDef(node, context, settings) {\n        tracer.drawNodeWeight(node, context, settings);\n        tracer.drawLabel(node, context, settings);\n      },\n      funcHoversDef: function funcHoversDef(node, context, settings) {\n        tracer.drawOnHover(node, context, settings, tracer.drawEdgeWeight);\n      },\n      funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawArrow(edge, source, target, color, context, settings);\n        tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  _weight: function _weight(target, weight) {\n    this.manager.pushStep(this.capsule, {\n      type: 'weight',\n      target: target,\n      weight: weight\n    });\n    return this;\n  },\n  _visit: function _visit(target, source, weight) {\n    this.manager.pushStep(this.capsule, {\n      type: 'visit',\n      target: target,\n      source: source,\n      weight: weight\n    });\n    return this;\n  },\n  _leave: function _leave(target, source, weight) {\n    this.manager.pushStep(this.capsule, {\n      type: 'leave',\n      target: target,\n      source: source,\n      weight: weight\n    });\n    return this;\n  },\n  processStep: function processStep(step, options) {\n    switch (step.type) {\n      case 'weight':\n        var targetNode = this.graph.nodes(this.n(step.target));\n        if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n        break;\n      case 'visit':\n      case 'leave':\n        var visit = step.type == 'visit';\n        var targetNode = this.graph.nodes(this.n(step.target));\n        var color = visit ? this.color.visited : this.color.left;\n        targetNode.color = color;\n        if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n        if (step.source !== undefined) {\n          var edgeId = this.e(step.source, step.target);\n          var edge = this.graph.edges(edgeId);\n          edge.color = color;\n          this.graph.dropEdge(edgeId).addEdge(edge);\n        }\n        if (this.logTracer) {\n          var source = step.source;\n          if (source === undefined) source = '';\n          this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n        }\n        break;\n      default:\n        DirectedGraphTracer.prototype.processStep.call(this, step, options);\n    }\n  },\n  setData: function setData(G) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n    this.graph.clear();\n    var nodes = [];\n    var edges = [];\n    var unitAngle = 2 * Math.PI / G.length;\n    var currentAngle = 0;\n    for (var i = 0; i < G.length; i++) {\n      currentAngle += unitAngle;\n      nodes.push({\n        id: this.n(i),\n        label: '' + i,\n        x: .5 + Math.sin(currentAngle) / 2,\n        y: .5 + Math.cos(currentAngle) / 2,\n        size: 1,\n        color: this.color.default,\n        weight: 0\n      });\n      for (var j = 0; j < G[i].length; j++) {\n        if (G[i][j]) {\n          edges.push({\n            id: this.e(i, j),\n            source: this.n(i),\n            target: this.n(j),\n            color: this.color.default,\n            size: 1,\n            weight: refineByType(G[i][j])\n          });\n        }\n      }\n    }\n\n    this.graph.read({\n      nodes: nodes,\n      edges: edges\n    });\n    this.s.camera.goTo({\n      x: 0,\n      y: 0,\n      angle: 0,\n      ratio: 1\n    });\n    this.refresh();\n\n    return false;\n  },\n  clear: function clear() {\n    DirectedGraphTracer.prototype.clear.call(this);\n\n    this.clearWeights();\n  },\n  clearWeights: function clearWeights() {\n    this.graph.nodes().forEach(function (node) {\n      node.weight = 0;\n    });\n  },\n  drawEdgeWeight: function drawEdgeWeight(edge, source, target, color, context, settings) {\n    if (source == target) return;\n\n    var prefix = settings('prefix') || '',\n        size = edge[prefix + 'size'] || 1;\n\n    if (size < settings('edgeLabelThreshold')) return;\n\n    if (0 === settings('edgeLabelSizePowRatio')) throw '\"edgeLabelSizePowRatio\" must not be 0.';\n\n    var fontSize,\n        x = (source[prefix + 'x'] + target[prefix + 'x']) / 2,\n        y = (source[prefix + 'y'] + target[prefix + 'y']) / 2,\n        dX = target[prefix + 'x'] - source[prefix + 'x'],\n        dY = target[prefix + 'y'] - source[prefix + 'y'],\n        angle = Math.atan2(dY, dX);\n\n    fontSize = settings('edgeLabelSize') === 'fixed' ? settings('defaultEdgeLabelSize') : settings('defaultEdgeLabelSize') * size * Math.pow(size, -1 / settings('edgeLabelSizePowRatio'));\n\n    context.save();\n\n    if (edge.active) {\n      context.font = [settings('activeFontStyle'), fontSize + 'px', settings('activeFont') || settings('font')].join(' ');\n\n      context.fillStyle = color;\n    } else {\n      context.font = [settings('fontStyle'), fontSize + 'px', settings('font')].join(' ');\n\n      context.fillStyle = color;\n    }\n\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n\n    context.translate(x, y);\n    context.rotate(angle);\n    context.fillText(edge.weight, 0, -size / 2 - 3);\n\n    context.restore();\n  },\n  drawNodeWeight: function drawNodeWeight(node, context, settings) {\n    var fontSize,\n        prefix = settings('prefix') || '',\n        size = node[prefix + 'size'];\n\n    if (size < settings('labelThreshold')) return;\n\n    fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n    context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n    context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n    context.textAlign = 'left';\n    context.fillText(node.weight, Math.round(node[prefix + 'x'] + size * 1.5), Math.round(node[prefix + 'y'] + fontSize / 3));\n  }\n});\n\nmodule.exports = WeightedDirectedGraphTracer;\n\n},{\"../../tracer_manager/util/index\":62,\"./directed_graph\":41}],47:[function(require,module,exports){\n'use strict';\n\nvar WeightedDirectedGraphTracer = require('./weighted_directed_graph');\nvar UndirectedGraphTracer = require('./undirected_graph');\n\nfunction WeightedUndirectedGraphTracer() {\n  if (WeightedDirectedGraphTracer.apply(this, arguments)) {\n    WeightedUndirectedGraphTracer.prototype.init.call(this);\n    return true;\n  }\n  return false;\n}\n\nWeightedUndirectedGraphTracer.prototype = $.extend(true, Object.create(WeightedDirectedGraphTracer.prototype), {\n  constructor: WeightedUndirectedGraphTracer,\n  name: 'WeightedUndirectedGraphTracer',\n  init: function init() {\n    var tracer = this;\n\n    this.s.settings({\n      defaultEdgeType: 'def',\n      funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawEdge(edge, source, target, color, context, settings);\n        tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n      }\n    });\n  },\n  setData: function setData(G) {\n    if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n    this.graph.clear();\n    var nodes = [];\n    var edges = [];\n    var unitAngle = 2 * Math.PI / G.length;\n    var currentAngle = 0;\n    for (var i = 0; i < G.length; i++) {\n      currentAngle += unitAngle;\n      nodes.push({\n        id: this.n(i),\n        label: '' + i,\n        x: .5 + Math.sin(currentAngle) / 2,\n        y: .5 + Math.cos(currentAngle) / 2,\n        size: 1,\n        color: this.color.default,\n        weight: 0\n      });\n    }\n    for (var i = 0; i < G.length; i++) {\n      for (var j = 0; j <= i; j++) {\n        if (G[i][j] || G[j][i]) {\n          edges.push({\n            id: this.e(i, j),\n            source: this.n(i),\n            target: this.n(j),\n            color: this.color.default,\n            size: 1,\n            weight: G[i][j]\n          });\n        }\n      }\n    }\n\n    this.graph.read({\n      nodes: nodes,\n      edges: edges\n    });\n    this.s.camera.goTo({\n      x: 0,\n      y: 0,\n      angle: 0,\n      ratio: 1\n    });\n    this.refresh();\n\n    return false;\n  },\n  e: UndirectedGraphTracer.prototype.e,\n  drawOnHover: UndirectedGraphTracer.prototype.drawOnHover,\n  drawEdge: UndirectedGraphTracer.prototype.drawEdge,\n  drawEdgeWeight: function drawEdgeWeight(edge, source, target, color, context, settings) {\n    var prefix = settings('prefix') || '';\n    if (source[prefix + 'x'] > target[prefix + 'x']) {\n      var temp = source;\n      source = target;\n      target = temp;\n    }\n    WeightedDirectedGraphTracer.prototype.drawEdgeWeight.call(this, edge, source, target, color, context, settings);\n  }\n});\n\nmodule.exports = WeightedUndirectedGraphTracer;\n\n},{\"./undirected_graph\":45,\"./weighted_directed_graph\":46}],48:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n\n  return request(url, {\n    type: 'GET'\n  });\n};\n\n},{\"./request\":51}],49:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n  return request(url, {\n    dataType: 'json',\n    type: 'GET'\n  });\n};\n\n},{\"./request\":51}],50:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url, data) {\n  return request(url, {\n    dataType: 'json',\n    type: 'POST',\n    data: JSON.stringify(data)\n  });\n};\n\n},{\"./request\":51}],51:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../../app');\n\nvar _$ = $;\nvar ajax = _$.ajax;\nvar extend = _$.extend;\n\n\nvar defaults = {};\n\nmodule.exports = function (url) {\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  app.setIsLoading(true);\n\n  return new RSVP.Promise(function (resolve, reject) {\n    var callbacks = {\n      success: function success(response) {\n        app.setIsLoading(false);\n        resolve(response);\n      },\n      error: function error(reason) {\n        app.setIsLoading(false);\n        reject(reason);\n      }\n    };\n\n    var opts = extend({}, defaults, options, callbacks, {\n      url: url\n    });\n\n    ajax(opts);\n  });\n};\n\n},{\"../../app\":3,\"rsvp\":67}],52:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../app');\nvar Toast = require('../dom/toast');\n\nvar checkLoading = function checkLoading() {\n  if (app.getIsLoading()) {\n    Toast.showErrorToast('Wait until it completes loading of previous file.');\n    return true;\n  }\n  return false;\n};\n\nvar getParameterByName = function getParameterByName(name) {\n  var url = window.location.href;\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n\n  var results = regex.exec(url);\n\n  if (!results || results.length !== 3) {\n    return null;\n  }\n\n  var _results = _slicedToArray(results, 3);\n\n  var id = _results[2];\n\n\n  return id;\n};\n\nvar getHashValue = function getHashValue(key) {\n  if (!key) return null;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n  for (var i = 0; i < params.length; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      return pair[1];\n    }\n  }\n  return null;\n};\n\nvar setHashValue = function setHashValue(key, value) {\n  if (!key || !value) return;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n\n  var found = false;\n  for (var i = 0; i < params.length && !found; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      pair[1] = value;\n      params[i] = pair.join('=');\n      found = true;\n    }\n  }\n  if (!found) {\n    params.push([key, value].join('='));\n  }\n\n  var newHash = params.join('&');\n  window.location.hash = '#' + newHash;\n};\n\nvar removeHashValue = function removeHashValue(key) {\n  if (!key) return;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n\n  for (var i = 0; i < params.length; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      params.splice(i, 1);\n      break;\n    }\n  }\n\n  var newHash = params.join('&');\n  window.location.hash = '#' + newHash;\n};\n\nvar setPath = function setPath(category, algorithm, file) {\n  var path = category ? category + (algorithm ? '/' + algorithm + (file ? '/' + file : '') : '') : '';\n  setHashValue('path', path);\n};\n\nvar getPath = function getPath() {\n  var hash = getHashValue('path');\n  if (hash) {\n    var _hash$split = hash.split('/');\n\n    var _hash$split2 = _slicedToArray(_hash$split, 3);\n\n    var category = _hash$split2[0];\n    var algorithm = _hash$split2[1];\n    var file = _hash$split2[2];\n\n    return { category: category, algorithm: algorithm, file: file };\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = {\n  checkLoading: checkLoading,\n  getParameterByName: getParameterByName,\n  getHashValue: getHashValue,\n  setHashValue: setHashValue,\n  removeHashValue: removeHashValue,\n  setPath: setPath,\n  getPath: getPath\n};\n\n},{\"../app\":3,\"../dom/toast\":23}],53:[function(require,module,exports){\n'use strict';\n\nvar loadAlgorithm = require('./load_algorithm');\nvar loadCategories = require('./load_categories');\nvar loadFile = require('./load_file');\nvar loadScratchPaper = require('./load_scratch_paper');\nvar shareScratchPaper = require('./share_scratch_paper');\n\nmodule.exports = {\n  loadAlgorithm: loadAlgorithm,\n  loadCategories: loadCategories,\n  loadFile: loadFile,\n  loadScratchPaper: loadScratchPaper,\n  shareScratchPaper: shareScratchPaper\n};\n\n},{\"./load_algorithm\":54,\"./load_categories\":55,\"./load_file\":56,\"./load_scratch_paper\":57,\"./share_scratch_paper\":58}],54:[function(require,module,exports){\n'use strict';\n\nvar getJSON = require('./ajax/get_json');\n\nvar _require = require('../utils');\n\nvar getAlgorithmDir = _require.getAlgorithmDir;\n\n\nmodule.exports = function (category, algorithm) {\n  var dir = getAlgorithmDir(category, algorithm);\n  return getJSON(dir + 'desc.json');\n};\n\n},{\"../utils\":65,\"./ajax/get_json\":49}],55:[function(require,module,exports){\n'use strict';\n\nvar getJSON = require('./ajax/get_json');\n\nmodule.exports = function () {\n  return getJSON('./algorithm/category.json');\n};\n\n},{\"./ajax/get_json\":49}],56:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\n\nvar app = require('../app');\n\nvar _require = require('../utils');\n\nvar getFileDir = _require.getFileDir;\nvar isScratchPaper = _require.isScratchPaper;\n\nvar _require2 = require('./helpers');\n\nvar checkLoading = _require2.checkLoading;\nvar setPath = _require2.setPath;\n\n\nvar get = require('./ajax/get');\n\nvar loadDataAndCode = function loadDataAndCode(dir) {\n  return RSVP.hash({\n    data: get(dir + 'data.js'),\n    code: get(dir + 'code.js')\n  });\n};\n\nvar loadFileAndUpdateContent = function loadFileAndUpdateContent(dir) {\n  app.getEditor().clearContent();\n\n  return loadDataAndCode(dir).then(function (content) {\n    app.updateCachedFile(dir, content);\n    app.getEditor().setContent(content);\n  });\n};\n\nvar cachedContentExists = function cachedContentExists(cachedFile) {\n  return cachedFile && cachedFile.data !== undefined && cachedFile.code !== undefined;\n};\n\nmodule.exports = function (category, algorithm, file, explanation) {\n  return new RSVP.Promise(function (resolve, reject) {\n    if (checkLoading()) {\n      reject();\n    } else {\n      if (isScratchPaper(category)) {\n        setPath(category, app.getLoadedScratch());\n      } else {\n        setPath(category, algorithm, file);\n      }\n      $('#explanation').html(explanation);\n\n      var dir = getFileDir(category, algorithm, file);\n      app.setLastFileUsed(dir);\n      var cachedFile = app.getCachedFile(dir);\n\n      if (cachedContentExists(cachedFile)) {\n        app.getEditor().setContent(cachedFile);\n        resolve();\n      } else {\n        loadFileAndUpdateContent(dir).then(resolve, reject);\n      }\n    }\n  });\n};\n\n},{\"../app\":3,\"../utils\":65,\"./ajax/get\":48,\"./helpers\":52,\"rsvp\":67}],57:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../app');\n\nvar _require = require('../utils');\n\nvar getFileDir = _require.getFileDir;\n\n\nvar getJSON = require('./ajax/get_json');\nvar loadAlgorithm = require('./load_algorithm');\n\nvar extractGistCode = function extractGistCode(files, name) {\n  return files[name + '.js'].content;\n};\n\nmodule.exports = function (gistID) {\n  return new RSVP.Promise(function (resolve, reject) {\n    app.setLoadedScratch(gistID);\n\n    getJSON('https://api.github.com/gists/' + gistID).then(function (_ref) {\n      var files = _ref.files;\n\n\n      var category = 'scratch';\n      var algorithm = gistID;\n\n      loadAlgorithm(category, algorithm).then(function (data) {\n\n        var algoData = extractGistCode(files, 'data');\n        var algoCode = extractGistCode(files, 'code');\n\n        // update scratch paper algo code with the loaded gist code\n        var dir = getFileDir(category, algorithm, 'scratch_paper');\n        app.updateCachedFile(dir, {\n          data: algoData,\n          code: algoCode,\n          'CREDIT.md': 'Shared by an anonymous user from http://parkjs814.github.io/AlgorithmVisualizer'\n        });\n\n        resolve({\n          category: category,\n          algorithm: algorithm,\n          data: data\n        });\n      });\n    });\n  });\n};\n\n},{\"../app\":3,\"../utils\":65,\"./ajax/get_json\":49,\"./load_algorithm\":54,\"rsvp\":67}],58:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../app');\n\nvar postJSON = require('./ajax/post_json');\n\nvar _require = require('./helpers');\n\nvar setPath = _require.setPath;\n\n\nmodule.exports = function () {\n  return new RSVP.Promise(function (resolve, reject) {\n    var _app$getEditor = app.getEditor();\n\n    var dataEditor = _app$getEditor.dataEditor;\n    var codeEditor = _app$getEditor.codeEditor;\n\n\n    var gist = {\n      'description': 'temp',\n      'public': true,\n      'files': {\n        'data.js': {\n          'content': dataEditor.getValue()\n        },\n        'code.js': {\n          'content': codeEditor.getValue()\n        }\n      }\n    };\n\n    postJSON('https://api.github.com/gists', gist).then(function (_ref) {\n      var id = _ref.id;\n\n      app.setLoadedScratch(id);\n      setPath('scratch', id);\n      var _location = location;\n      var href = _location.href;\n\n      $('#algorithm').html('Shared');\n      resolve(href);\n    });\n  });\n};\n\n},{\"../app\":3,\"./ajax/post_json\":50,\"./helpers\":52,\"rsvp\":67}],59:[function(require,module,exports){\n'use strict';\n\nvar TracerManager = require('./manager');\nvar Tracer = require('../module/tracer/tracer');\n\nmodule.exports = {\n  init: function init() {\n    var tm = new TracerManager();\n    Tracer.prototype.manager = tm;\n    return tm;\n  }\n};\n\n},{\"../module/tracer/tracer\":44,\"./manager\":60}],60:[function(require,module,exports){\n'use strict';\n\nvar stepLimit = 1e6;\n\nvar TracerManager = function TracerManager() {\n  this.timer = null;\n  this.pause = false;\n  this.capsules = [];\n  this.interval = 500;\n};\n\nTracerManager.prototype = {\n  add: function add(tracer) {\n\n    var $container = $('<section class=\"module_wrapper\">');\n    $('.module_container').append($container);\n\n    var capsule = {\n      module: tracer.module,\n      tracer: tracer,\n      allocated: true,\n      defaultName: null,\n      $container: $container,\n      isNew: true\n    };\n\n    this.capsules.push(capsule);\n    return capsule;\n  },\n  allocate: function allocate(newTracer) {\n    var selectedCapsule = null;\n    var count = 0;\n\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.module === newTracer.module) {\n        count++;\n        if (!capsule.allocated) {\n          capsule.tracer = newTracer;\n          capsule.allocated = true;\n          capsule.isNew = false;\n          selectedCapsule = capsule;\n          return false;\n        }\n      }\n    });\n\n    if (selectedCapsule === null) {\n      count++;\n      selectedCapsule = this.add(newTracer);\n    }\n\n    selectedCapsule.defaultName = newTracer.name + ' ' + count;\n    selectedCapsule.order = this.order++;\n    return selectedCapsule;\n  },\n  deallocateAll: function deallocateAll() {\n    this.order = 0;\n    this.reset();\n    $.each(this.capsules, function (i, capsule) {\n      capsule.allocated = false;\n    });\n  },\n  removeUnallocated: function removeUnallocated() {\n    var changed = false;\n\n    this.capsules = $.grep(this.capsules, function (capsule) {\n      var removed = !capsule.allocated;\n\n      if (capsule.isNew || removed) {\n        changed = true;\n      }\n      if (removed) {\n        capsule.$container.remove();\n      }\n\n      return !removed;\n    });\n\n    if (changed) {\n      this.place();\n    }\n  },\n  place: function place() {\n    var capsules = this.capsules;\n\n\n    $.each(capsules, function (i, capsule) {\n      var width = 100;\n      var height = 100 / capsules.length;\n      var top = height * capsule.order;\n\n      capsule.$container.css({\n        top: top + '%',\n        width: width + '%',\n        height: height + '%'\n      });\n\n      capsule.tracer.resize();\n    });\n  },\n  resize: function resize() {\n    this.command('resize');\n  },\n  isPause: function isPause() {\n    return this.pause;\n  },\n  setInterval: function setInterval(interval) {\n    $('#interval').val(interval);\n  },\n  reset: function reset() {\n    this.traces = [];\n    this.traceIndex = -1;\n    this.stepCnt = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.command('clear');\n  },\n  pushStep: function pushStep(capsule, step) {\n    if (this.stepCnt++ > stepLimit) throw \"Tracer's stack overflow\";\n    var len = this.traces.length;\n    var last = [];\n    if (len === 0) {\n      this.traces.push(last);\n    } else {\n      last = this.traces[len - 1];\n    }\n    last.push($.extend(step, {\n      capsule: capsule\n    }));\n  },\n  newStep: function newStep() {\n    this.traces.push([]);\n  },\n  pauseStep: function pauseStep() {\n    if (this.traceIndex < 0) return;\n    this.pause = true;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    $('#btn_pause').addClass('active');\n  },\n  resumeStep: function resumeStep() {\n    this.pause = false;\n    this.step(this.traceIndex + 1);\n    $('#btn_pause').removeClass('active');\n  },\n  step: function step(i) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var tracer = this;\n\n    if (isNaN(i) || i >= this.traces.length || i < 0) return;\n\n    this.traceIndex = i;\n    var trace = this.traces[i];\n    trace.forEach(function (step) {\n      step.capsule.tracer.processStep(step, options);\n    });\n\n    if (!options.virtual) {\n      this.command('refresh');\n    }\n\n    if (this.pause) return;\n\n    this.timer = setTimeout(function () {\n      tracer.step(i + 1, options);\n    }, this.interval);\n  },\n  prevStep: function prevStep() {\n    this.command('clear');\n\n    var finalIndex = this.traceIndex - 1;\n    if (finalIndex < 0) {\n      this.traceIndex = -1;\n      this.command('refresh');\n      return;\n    }\n\n    for (var i = 0; i < finalIndex; i++) {\n      this.step(i, {\n        virtual: true\n      });\n    }\n\n    this.step(finalIndex);\n  },\n  nextStep: function nextStep() {\n    this.step(this.traceIndex + 1);\n  },\n  visualize: function visualize() {\n    this.traceIndex = -1;\n    this.resumeStep();\n  },\n  command: function command() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var functionName = args.shift();\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.allocated) {\n        capsule.tracer.module.prototype[functionName].apply(capsule.tracer, args);\n      }\n    });\n  },\n  findOwner: function findOwner(container) {\n    var selectedCapsule = null;\n    $.each(this.capsules, function (i, capsule) {\n      if (capsule.$container[0] === container) {\n        selectedCapsule = capsule;\n        return false;\n      }\n    });\n    return selectedCapsule.tracer;\n  }\n};\n\nmodule.exports = TracerManager;\n\n},{}],61:[function(require,module,exports){\n'use strict';\n\nvar parse = JSON.parse;\n\n\nvar fromJSON = function fromJSON(obj) {\n  return parse(obj, function (key, value) {\n    return value === 'Infinity' ? Infinity : value;\n  });\n};\n\nmodule.exports = fromJSON;\n\n},{}],62:[function(require,module,exports){\n'use strict';\n\nvar toJSON = require('./to_json');\nvar fromJSON = require('./from_json');\nvar refineByType = require('./refine_by_type');\n\nmodule.exports = {\n  toJSON: toJSON,\n  fromJSON: fromJSON,\n  refineByType: refineByType\n};\n\n},{\"./from_json\":61,\"./refine_by_type\":63,\"./to_json\":64}],63:[function(require,module,exports){\n'use strict';\n\nvar refineByType = function refineByType(item) {\n  return typeof item === 'number' ? refineNumber(item) : refineString(item);\n};\n\nvar refineString = function refineString(str) {\n  return str === '' ? ' ' : str;\n};\n\nvar refineNumber = function refineNumber(num) {\n  return num === Infinity ? '∞' : num;\n};\n\nmodule.exports = refineByType;\n\n},{}],64:[function(require,module,exports){\n'use strict';\n\nvar stringify = JSON.stringify;\n\n\nvar toJSON = function toJSON(obj) {\n  return stringify(obj, function (key, value) {\n    return value === Infinity ? 'Infinity' : value;\n  });\n};\n\nmodule.exports = toJSON;\n\n},{}],65:[function(require,module,exports){\n'use strict';\n\nvar isScratchPaper = function isScratchPaper(category, algorithm) {\n  return category == 'scratch';\n};\n\nvar getAlgorithmDir = function getAlgorithmDir(category, algorithm) {\n  if (isScratchPaper(category)) return './algorithm/scratch_paper/';\n  return './algorithm/' + category + '/' + algorithm + '/';\n};\n\nvar getFileDir = function getFileDir(category, algorithm, file) {\n  if (isScratchPaper(category)) return './algorithm/scratch_paper/';\n  return './algorithm/' + category + '/' + algorithm + '/' + file + '/';\n};\n\nmodule.exports = {\n  isScratchPaper: isScratchPaper,\n  getAlgorithmDir: getAlgorithmDir,\n  getFileDir: getFileDir\n};\n\n},{}],66:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],67:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.2.1\n */\n\n(function() {\n    \"use strict\";\n    function lib$rsvp$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$rsvp$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$rsvp$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$rsvp$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$rsvp$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$rsvp$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$rsvp$utils$$isArray = lib$rsvp$utils$$_isArray;\n\n    var lib$rsvp$utils$$now = Date.now || function() { return new Date().getTime(); };\n\n    function lib$rsvp$utils$$F() { }\n\n    var lib$rsvp$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      lib$rsvp$utils$$F.prototype = o;\n      return new lib$rsvp$utils$$F();\n    });\n    function lib$rsvp$events$$indexOf(callbacks, callback) {\n      for (var i=0, l=callbacks.length; i<l; i++) {\n        if (callbacks[i] === callback) { return i; }\n      }\n\n      return -1;\n    }\n\n    function lib$rsvp$events$$callbacksFor(object) {\n      var callbacks = object._promiseCallbacks;\n\n      if (!callbacks) {\n        callbacks = object._promiseCallbacks = {};\n      }\n\n      return callbacks;\n    }\n\n    var lib$rsvp$events$$default = {\n\n      /**\n        `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n        Example:\n\n        ```javascript\n        var object = {};\n\n        RSVP.EventTarget.mixin(object);\n\n        object.on('finished', function(event) {\n          // handle event\n        });\n\n        object.trigger('finished', { detail: value });\n        ```\n\n        `EventTarget.mixin` also works with prototypes:\n\n        ```javascript\n        var Person = function() {};\n        RSVP.EventTarget.mixin(Person.prototype);\n\n        var yehuda = new Person();\n        var tom = new Person();\n\n        yehuda.on('poke', function(event) {\n          console.log('Yehuda says OW');\n        });\n\n        tom.on('poke', function(event) {\n          console.log('Tom says OW');\n        });\n\n        yehuda.trigger('poke');\n        tom.trigger('poke');\n        ```\n\n        @method mixin\n        @for RSVP.EventTarget\n        @private\n        @param {Object} object object to extend with EventTarget methods\n      */\n      'mixin': function(object) {\n        object['on']      = this['on'];\n        object['off']     = this['off'];\n        object['trigger'] = this['trigger'];\n        object._promiseCallbacks = undefined;\n        return object;\n      },\n\n      /**\n        Registers a callback to be executed when `eventName` is triggered\n\n        ```javascript\n        object.on('event', function(eventInfo){\n          // handle the event\n        });\n\n        object.trigger('event');\n        ```\n\n        @method on\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to listen for\n        @param {Function} callback function to be called when the event is triggered.\n      */\n      'on': function(eventName, callback) {\n        if (typeof callback !== 'function') {\n          throw new TypeError('Callback must be a function');\n        }\n\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks;\n\n        callbacks = allCallbacks[eventName];\n\n        if (!callbacks) {\n          callbacks = allCallbacks[eventName] = [];\n        }\n\n        if (lib$rsvp$events$$indexOf(callbacks, callback) === -1) {\n          callbacks.push(callback);\n        }\n      },\n\n      /**\n        You can use `off` to stop firing a particular callback for an event:\n\n        ```javascript\n        function doStuff() { // do stuff! }\n        object.on('stuff', doStuff);\n\n        object.trigger('stuff'); // doStuff will be called\n\n        // Unregister ONLY the doStuff callback\n        object.off('stuff', doStuff);\n        object.trigger('stuff'); // doStuff will NOT be called\n        ```\n\n        If you don't pass a `callback` argument to `off`, ALL callbacks for the\n        event will not be executed when the event fires. For example:\n\n        ```javascript\n        var callback1 = function(){};\n        var callback2 = function(){};\n\n        object.on('stuff', callback1);\n        object.on('stuff', callback2);\n\n        object.trigger('stuff'); // callback1 and callback2 will be executed.\n\n        object.off('stuff');\n        object.trigger('stuff'); // callback1 and callback2 will not be executed!\n        ```\n\n        @method off\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName event to stop listening to\n        @param {Function} callback optional argument. If given, only the function\n        given will be removed from the event's callback queue. If no `callback`\n        argument is given, all callbacks will be removed from the event's callback\n        queue.\n      */\n      'off': function(eventName, callback) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, index;\n\n        if (!callback) {\n          allCallbacks[eventName] = [];\n          return;\n        }\n\n        callbacks = allCallbacks[eventName];\n\n        index = lib$rsvp$events$$indexOf(callbacks, callback);\n\n        if (index !== -1) { callbacks.splice(index, 1); }\n      },\n\n      /**\n        Use `trigger` to fire custom events. For example:\n\n        ```javascript\n        object.on('foo', function(){\n          console.log('foo event happened!');\n        });\n        object.trigger('foo');\n        // 'foo event happened!' logged to the console\n        ```\n\n        You can also pass a value as a second argument to `trigger` that will be\n        passed as an argument to all event listeners for the event:\n\n        ```javascript\n        object.on('foo', function(value){\n          console.log(value.name);\n        });\n\n        object.trigger('foo', { name: 'bar' });\n        // 'bar' logged to the console\n        ```\n\n        @method trigger\n        @for RSVP.EventTarget\n        @private\n        @param {String} eventName name of the event to be triggered\n        @param {*} options optional value to be passed to any event handlers for\n        the given `eventName`\n      */\n      'trigger': function(eventName, options, label) {\n        var allCallbacks = lib$rsvp$events$$callbacksFor(this), callbacks, callback;\n\n        if (callbacks = allCallbacks[eventName]) {\n          // Don't cache the callbacks.length since it may grow\n          for (var i=0; i<callbacks.length; i++) {\n            callback = callbacks[i];\n\n            callback(options, label);\n          }\n        }\n      }\n    };\n\n    var lib$rsvp$config$$config = {\n      instrument: false\n    };\n\n    lib$rsvp$events$$default['mixin'](lib$rsvp$config$$config);\n\n    function lib$rsvp$config$$configure(name, value) {\n      if (name === 'onerror') {\n        // handle for legacy users that expect the actual\n        // error to be passed to their function added via\n        // `RSVP.configure('onerror', someFunctionHere);`\n        lib$rsvp$config$$config['on']('error', value);\n        return;\n      }\n\n      if (arguments.length === 2) {\n        lib$rsvp$config$$config[name] = value;\n      } else {\n        return lib$rsvp$config$$config[name];\n      }\n    }\n\n    var lib$rsvp$instrument$$queue = [];\n\n    function lib$rsvp$instrument$$scheduleFlush() {\n      setTimeout(function() {\n        var entry;\n        for (var i = 0; i < lib$rsvp$instrument$$queue.length; i++) {\n          entry = lib$rsvp$instrument$$queue[i];\n\n          var payload = entry.payload;\n\n          payload.guid = payload.key + payload.id;\n          payload.childGuid = payload.key + payload.childId;\n          if (payload.error) {\n            payload.stack = payload.error.stack;\n          }\n\n          lib$rsvp$config$$config['trigger'](entry.name, entry.payload);\n        }\n        lib$rsvp$instrument$$queue.length = 0;\n      }, 50);\n    }\n\n    function lib$rsvp$instrument$$instrument(eventName, promise, child) {\n      if (1 === lib$rsvp$instrument$$queue.push({\n        name: eventName,\n        payload: {\n          key: promise._guidKey,\n          id:  promise._id,\n          eventName: eventName,\n          detail: promise._result,\n          childId: child && child._id,\n          label: promise._label,\n          timeStamp: lib$rsvp$utils$$now(),\n          error: lib$rsvp$config$$config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n        }})) {\n          lib$rsvp$instrument$$scheduleFlush();\n        }\n      }\n    var lib$rsvp$instrument$$default = lib$rsvp$instrument$$instrument;\n    function lib$rsvp$then$$then(onFulfillment, onRejection, label) {\n      var parent = this;\n      var state = parent._state;\n\n      if (state === lib$rsvp$$internal$$FULFILLED && !onFulfillment || state === lib$rsvp$$internal$$REJECTED && !onRejection) {\n        lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('chained', parent, parent);\n        return parent;\n      }\n\n      parent._onError = null;\n\n      var child = new parent.constructor(lib$rsvp$$internal$$noop, label);\n      var result = parent._result;\n\n      lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('chained', parent, child);\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$rsvp$config$$config.async(function(){\n          lib$rsvp$$internal$$invokeCallback(state, child, callback, result);\n        });\n      } else {\n        lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$rsvp$then$$default = lib$rsvp$then$$then;\n    function lib$rsvp$promise$resolve$$resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$rsvp$promise$resolve$$default = lib$rsvp$promise$resolve$$resolve;\n    function lib$rsvp$enumerator$$makeSettledResult(state, position, value) {\n      if (state === lib$rsvp$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n         return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function lib$rsvp$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          lib$rsvp$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$rsvp$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$rsvp$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    var lib$rsvp$enumerator$$default = lib$rsvp$enumerator$$Enumerator;\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$rsvp$utils$$isArray(input);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length     = this.length;\n      var promise    = this.promise;\n      var input      = this._input;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._settleMaybeThenable = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$rsvp$promise$resolve$$default) {\n        var then = lib$rsvp$$internal$$getThen(entry);\n\n        if (then === lib$rsvp$then$$default &&\n            entry._state !== lib$rsvp$$internal$$PENDING) {\n          entry._onError = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = this._makeResult(lib$rsvp$$internal$$FULFILLED, i, entry);\n        } else if (c === lib$rsvp$promise$$default) {\n          var promise = new c(lib$rsvp$$internal$$noop);\n          lib$rsvp$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      if (lib$rsvp$utils$$isMaybeThenable(entry)) {\n        this._settleMaybeThenable(entry, i);\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult(lib$rsvp$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$rsvp$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === lib$rsvp$$internal$$REJECTED) {\n          lib$rsvp$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$rsvp$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    lib$rsvp$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$rsvp$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$rsvp$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$rsvp$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$rsvp$promise$all$$all(entries, label) {\n      return new lib$rsvp$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    }\n    var lib$rsvp$promise$all$$default = lib$rsvp$promise$all$$all;\n    function lib$rsvp$promise$race$$race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n\n      if (!lib$rsvp$utils$$isArray(entries)) {\n        lib$rsvp$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$rsvp$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        lib$rsvp$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$rsvp$promise$race$$default = lib$rsvp$promise$race$$race;\n    function lib$rsvp$promise$reject$$reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$rsvp$$internal$$noop, label);\n      lib$rsvp$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$rsvp$promise$reject$$default = lib$rsvp$promise$reject$$reject;\n\n    var lib$rsvp$promise$$guidKey = 'rsvp_' + lib$rsvp$utils$$now() + '-';\n    var lib$rsvp$promise$$counter = 0;\n\n    function lib$rsvp$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$rsvp$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    function lib$rsvp$promise$$Promise(resolver, label) {\n      this._id = lib$rsvp$promise$$counter++;\n      this._label = label;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      lib$rsvp$config$$config.instrument && lib$rsvp$instrument$$default('created', this);\n\n      if (lib$rsvp$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$rsvp$promise$$needsResolver();\n        this instanceof lib$rsvp$promise$$Promise ? lib$rsvp$$internal$$initializePromise(this, resolver) : lib$rsvp$promise$$needsNew();\n      }\n    }\n\n    var lib$rsvp$promise$$default = lib$rsvp$promise$$Promise;\n\n    // deprecated\n    lib$rsvp$promise$$Promise.cast = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.all = lib$rsvp$promise$all$$default;\n    lib$rsvp$promise$$Promise.race = lib$rsvp$promise$race$$default;\n    lib$rsvp$promise$$Promise.resolve = lib$rsvp$promise$resolve$$default;\n    lib$rsvp$promise$$Promise.reject = lib$rsvp$promise$reject$$default;\n\n    lib$rsvp$promise$$Promise.prototype = {\n      constructor: lib$rsvp$promise$$Promise,\n\n      _guidKey: lib$rsvp$promise$$guidKey,\n\n      _onError: function (reason) {\n        var promise = this;\n        lib$rsvp$config$$config.after(function() {\n          if (promise._onError) {\n            lib$rsvp$config$$config['trigger']('error', reason, promise._label);\n          }\n        });\n      },\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfillment\n      @param {Function} onRejection\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$rsvp$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection, label) {\n        return this.then(undefined, onRejection, label);\n      },\n\n    /**\n      `finally` will be invoked regardless of the promise's fate just as native\n      try/catch/finally behaves\n\n      Synchronous example:\n\n      ```js\n      findAuthor() {\n        if (Math.random() > 0.5) {\n          throw new Error();\n        }\n        return new Author();\n      }\n\n      try {\n        return findAuthor(); // succeed or fail\n      } catch(error) {\n        return findOtherAuther();\n      } finally {\n        // always runs\n        // doesn't affect the return value\n      }\n      ```\n\n      Asynchronous example:\n\n      ```js\n      findAuthor().catch(function(reason){\n        return findOtherAuther();\n      }).finally(function(){\n        // author was either found, or not\n      });\n      ```\n\n      @method finally\n      @param {Function} callback\n      @param {String} label optional string for labeling the promise.\n      Useful for tooling.\n      @return {Promise}\n    */\n      'finally': function(callback, label) {\n        var promise = this;\n        var constructor = promise.constructor;\n\n        return promise.then(function(value) {\n          return constructor.resolve(callback()).then(function() {\n            return value;\n          });\n        }, function(reason) {\n          return constructor.resolve(callback()).then(function() {\n            return constructor.reject(reason);\n          });\n        }, label);\n      }\n    };\n    function  lib$rsvp$$internal$$withOwnPromise() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$rsvp$$internal$$noop() {}\n\n    var lib$rsvp$$internal$$PENDING   = void 0;\n    var lib$rsvp$$internal$$FULFILLED = 1;\n    var lib$rsvp$$internal$$REJECTED  = 2;\n\n    var lib$rsvp$$internal$$GET_THEN_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$rsvp$$internal$$GET_THEN_ERROR.error = error;\n        return lib$rsvp$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$rsvp$$internal$$handleForeignThenable(promise, thenable, then) {\n      lib$rsvp$config$$config.async(function(promise) {\n        var sealed = false;\n        var error = lib$rsvp$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value, undefined);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$rsvp$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$rsvp$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$rsvp$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$rsvp$$internal$$REJECTED) {\n        thenable._onError = null;\n        lib$rsvp$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$rsvp$$internal$$subscribe(thenable, undefined, function(value) {\n          if (thenable !== value) {\n            lib$rsvp$$internal$$resolve(promise, value, undefined);\n          } else {\n            lib$rsvp$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$rsvp$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$rsvp$then$$default &&\n          constructor.resolve === lib$rsvp$promise$resolve$$default) {\n        lib$rsvp$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$rsvp$$internal$$GET_THEN_ERROR) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$rsvp$utils$$isFunction(then)) {\n          lib$rsvp$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$rsvp$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$rsvp$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (lib$rsvp$utils$$objectOrFunction(value)) {\n        lib$rsvp$$internal$$handleMaybeThenable(promise, value, lib$rsvp$$internal$$getThen(value));\n      } else {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$publishRejection(promise) {\n      if (promise._onError) {\n        promise._onError(promise._result);\n      }\n\n      lib$rsvp$$internal$$publish(promise);\n    }\n\n    function lib$rsvp$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$rsvp$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n        if (lib$rsvp$config$$config.instrument) {\n          lib$rsvp$instrument$$default('fulfilled', promise);\n        }\n      } else {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, promise);\n      }\n    }\n\n    function lib$rsvp$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$rsvp$$internal$$PENDING) { return; }\n      promise._state = lib$rsvp$$internal$$REJECTED;\n      promise._result = reason;\n      lib$rsvp$config$$config.async(lib$rsvp$$internal$$publishRejection, promise);\n    }\n\n    function lib$rsvp$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onError = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$rsvp$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$rsvp$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$rsvp$config$$config.async(lib$rsvp$$internal$$publish, parent);\n      }\n    }\n\n    function lib$rsvp$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (lib$rsvp$config$$config.instrument) {\n        lib$rsvp$instrument$$default(settled === lib$rsvp$$internal$$FULFILLED ? 'fulfilled' : 'rejected', promise);\n      }\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$rsvp$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$rsvp$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$rsvp$$internal$$TRY_CATCH_ERROR = new lib$rsvp$$internal$$ErrorObject();\n\n    function lib$rsvp$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$rsvp$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$rsvp$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$rsvp$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$rsvp$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$rsvp$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$rsvp$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$rsvp$$internal$$reject(promise, lib$rsvp$$internal$$withOwnPromise());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$rsvp$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$rsvp$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$rsvp$$internal$$reject(promise, error);\n      } else if (settled === lib$rsvp$$internal$$FULFILLED) {\n        lib$rsvp$$internal$$fulfill(promise, value);\n      } else if (settled === lib$rsvp$$internal$$REJECTED) {\n        lib$rsvp$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$rsvp$$internal$$initializePromise(promise, resolver) {\n      var resolved = false;\n      try {\n        resolver(function resolvePromise(value){\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          if (resolved) { return; }\n          resolved = true;\n          lib$rsvp$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$rsvp$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$rsvp$all$settled$$AllSettled(Constructor, entries, label) {\n      this._superConstructor(Constructor, entries, false /* don't abort on reject */, label);\n    }\n\n    lib$rsvp$all$settled$$AllSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$all$settled$$AllSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$all$settled$$AllSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n    lib$rsvp$all$settled$$AllSettled.prototype._validationError = function() {\n      return new Error('allSettled must be called with an array');\n    };\n\n    function lib$rsvp$all$settled$$allSettled(entries, label) {\n      return new lib$rsvp$all$settled$$AllSettled(lib$rsvp$promise$$default, entries, label).promise;\n    }\n    var lib$rsvp$all$settled$$default = lib$rsvp$all$settled$$allSettled;\n    function lib$rsvp$all$$all(array, label) {\n      return lib$rsvp$promise$$default.all(array, label);\n    }\n    var lib$rsvp$all$$default = lib$rsvp$all$$all;\n    var lib$rsvp$asap$$len = 0;\n    var lib$rsvp$asap$$toString = {}.toString;\n    var lib$rsvp$asap$$vertxNext;\n    function lib$rsvp$asap$$asap(callback, arg) {\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len] = callback;\n      lib$rsvp$asap$$queue[lib$rsvp$asap$$len + 1] = arg;\n      lib$rsvp$asap$$len += 2;\n      if (lib$rsvp$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        lib$rsvp$asap$$scheduleFlush();\n      }\n    }\n\n    var lib$rsvp$asap$$default = lib$rsvp$asap$$asap;\n\n    var lib$rsvp$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$rsvp$asap$$browserGlobal = lib$rsvp$asap$$browserWindow || {};\n    var lib$rsvp$asap$$BrowserMutationObserver = lib$rsvp$asap$$browserGlobal.MutationObserver || lib$rsvp$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$rsvp$asap$$isNode = typeof self === 'undefined' &&\n      typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$rsvp$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$rsvp$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$rsvp$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$rsvp$asap$$useVertxTimer() {\n      return function() {\n        lib$rsvp$asap$$vertxNext(lib$rsvp$asap$$flush);\n      };\n    }\n\n    function lib$rsvp$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$rsvp$asap$$BrowserMutationObserver(lib$rsvp$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$rsvp$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$rsvp$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$rsvp$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$rsvp$asap$$flush, 1);\n      };\n    }\n\n    var lib$rsvp$asap$$queue = new Array(1000);\n    function lib$rsvp$asap$$flush() {\n      for (var i = 0; i < lib$rsvp$asap$$len; i+=2) {\n        var callback = lib$rsvp$asap$$queue[i];\n        var arg = lib$rsvp$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$rsvp$asap$$queue[i] = undefined;\n        lib$rsvp$asap$$queue[i+1] = undefined;\n      }\n\n      lib$rsvp$asap$$len = 0;\n    }\n\n    function lib$rsvp$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$rsvp$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$rsvp$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$rsvp$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$rsvp$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$rsvp$asap$$isNode) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useNextTick();\n    } else if (lib$rsvp$asap$$BrowserMutationObserver) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMutationObserver();\n    } else if (lib$rsvp$asap$$isWorker) {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useMessageChannel();\n    } else if (lib$rsvp$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$attemptVertex();\n    } else {\n      lib$rsvp$asap$$scheduleFlush = lib$rsvp$asap$$useSetTimeout();\n    }\n    function lib$rsvp$defer$$defer(label) {\n      var deferred = {};\n\n      deferred['promise'] = new lib$rsvp$promise$$default(function(resolve, reject) {\n        deferred['resolve'] = resolve;\n        deferred['reject'] = reject;\n      }, label);\n\n      return deferred;\n    }\n    var lib$rsvp$defer$$default = lib$rsvp$defer$$defer;\n    function lib$rsvp$filter$$filter(promises, filterFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(filterFn)) {\n          throw new TypeError(\"You must pass a function as filter's second argument.\");\n        }\n\n        var length = values.length;\n        var filtered = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          filtered[i] = filterFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(filtered, label).then(function(filtered) {\n          var results = new Array(length);\n          var newLength = 0;\n\n          for (var i = 0; i < length; i++) {\n            if (filtered[i]) {\n              results[newLength] = values[i];\n              newLength++;\n            }\n          }\n\n          results.length = newLength;\n\n          return results;\n        });\n      });\n    }\n    var lib$rsvp$filter$$default = lib$rsvp$filter$$filter;\n\n    function lib$rsvp$promise$hash$$PromiseHash(Constructor, object, label) {\n      this._superConstructor(Constructor, object, true, label);\n    }\n\n    var lib$rsvp$promise$hash$$default = lib$rsvp$promise$hash$$PromiseHash;\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype = lib$rsvp$utils$$o_create(lib$rsvp$enumerator$$default.prototype);\n    lib$rsvp$promise$hash$$PromiseHash.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$promise$hash$$PromiseHash.prototype._init = function() {\n      this._result = {};\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validateInput = function(input) {\n      return input && typeof input === 'object';\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._validationError = function() {\n      return new Error('Promise.hash must be called with an object');\n    };\n\n    lib$rsvp$promise$hash$$PromiseHash.prototype._enumerate = function() {\n      var enumerator = this;\n      var promise    = enumerator.promise;\n      var input      = enumerator._input;\n      var results    = [];\n\n      for (var key in input) {\n        if (promise._state === lib$rsvp$$internal$$PENDING && Object.prototype.hasOwnProperty.call(input, key)) {\n          results.push({\n            position: key,\n            entry: input[key]\n          });\n        }\n      }\n\n      var length = results.length;\n      enumerator._remaining = length;\n      var result;\n\n      for (var i = 0; promise._state === lib$rsvp$$internal$$PENDING && i < length; i++) {\n        result = results[i];\n        enumerator._eachEntry(result.entry, result.position);\n      }\n    };\n\n    function lib$rsvp$hash$settled$$HashSettled(Constructor, object, label) {\n      this._superConstructor(Constructor, object, false, label);\n    }\n\n    lib$rsvp$hash$settled$$HashSettled.prototype = lib$rsvp$utils$$o_create(lib$rsvp$promise$hash$$default.prototype);\n    lib$rsvp$hash$settled$$HashSettled.prototype._superConstructor = lib$rsvp$enumerator$$default;\n    lib$rsvp$hash$settled$$HashSettled.prototype._makeResult = lib$rsvp$enumerator$$makeSettledResult;\n\n    lib$rsvp$hash$settled$$HashSettled.prototype._validationError = function() {\n      return new Error('hashSettled must be called with an object');\n    };\n\n    function lib$rsvp$hash$settled$$hashSettled(object, label) {\n      return new lib$rsvp$hash$settled$$HashSettled(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$settled$$default = lib$rsvp$hash$settled$$hashSettled;\n    function lib$rsvp$hash$$hash(object, label) {\n      return new lib$rsvp$promise$hash$$default(lib$rsvp$promise$$default, object, label).promise;\n    }\n    var lib$rsvp$hash$$default = lib$rsvp$hash$$hash;\n    function lib$rsvp$map$$map(promises, mapFn, label) {\n      return lib$rsvp$promise$$default.all(promises, label).then(function(values) {\n        if (!lib$rsvp$utils$$isFunction(mapFn)) {\n          throw new TypeError(\"You must pass a function as map's second argument.\");\n        }\n\n        var length = values.length;\n        var results = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          results[i] = mapFn(values[i]);\n        }\n\n        return lib$rsvp$promise$$default.all(results, label);\n      });\n    }\n    var lib$rsvp$map$$default = lib$rsvp$map$$map;\n\n    function lib$rsvp$node$$Result() {\n      this.value = undefined;\n    }\n\n    var lib$rsvp$node$$ERROR = new lib$rsvp$node$$Result();\n    var lib$rsvp$node$$GET_THEN_ERROR = new lib$rsvp$node$$Result();\n\n    function lib$rsvp$node$$getThen(obj) {\n      try {\n       return obj.then;\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value= error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n\n    function lib$rsvp$node$$tryApply(f, s, a) {\n      try {\n        f.apply(s, a);\n      } catch(error) {\n        lib$rsvp$node$$ERROR.value = error;\n        return lib$rsvp$node$$ERROR;\n      }\n    }\n\n    function lib$rsvp$node$$makeObject(_, argumentNames) {\n      var obj = {};\n      var name;\n      var i;\n      var length = _.length;\n      var args = new Array(length);\n\n      for (var x = 0; x < length; x++) {\n        args[x] = _[x];\n      }\n\n      for (i = 0; i < argumentNames.length; i++) {\n        name = argumentNames[i];\n        obj[name] = args[i + 1];\n      }\n\n      return obj;\n    }\n\n    function lib$rsvp$node$$arrayResult(_) {\n      var length = _.length;\n      var args = new Array(length - 1);\n\n      for (var i = 1; i < length; i++) {\n        args[i - 1] = _[i];\n      }\n\n      return args;\n    }\n\n    function lib$rsvp$node$$wrapThenable(then, promise) {\n      return {\n        then: function(onFulFillment, onRejection) {\n          return then.call(promise, onFulFillment, onRejection);\n        }\n      };\n    }\n\n    function lib$rsvp$node$$denodeify(nodeFunc, options) {\n      var fn = function() {\n        var self = this;\n        var l = arguments.length;\n        var args = new Array(l + 1);\n        var arg;\n        var promiseInput = false;\n\n        for (var i = 0; i < l; ++i) {\n          arg = arguments[i];\n\n          if (!promiseInput) {\n            // TODO: clean this up\n            promiseInput = lib$rsvp$node$$needsPromiseInput(arg);\n            if (promiseInput === lib$rsvp$node$$GET_THEN_ERROR) {\n              var p = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n              lib$rsvp$$internal$$reject(p, lib$rsvp$node$$GET_THEN_ERROR.value);\n              return p;\n            } else if (promiseInput && promiseInput !== true) {\n              arg = lib$rsvp$node$$wrapThenable(promiseInput, arg);\n            }\n          }\n          args[i] = arg;\n        }\n\n        var promise = new lib$rsvp$promise$$default(lib$rsvp$$internal$$noop);\n\n        args[l] = function(err, val) {\n          if (err)\n            lib$rsvp$$internal$$reject(promise, err);\n          else if (options === undefined)\n            lib$rsvp$$internal$$resolve(promise, val);\n          else if (options === true)\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$arrayResult(arguments));\n          else if (lib$rsvp$utils$$isArray(options))\n            lib$rsvp$$internal$$resolve(promise, lib$rsvp$node$$makeObject(arguments, options));\n          else\n            lib$rsvp$$internal$$resolve(promise, val);\n        };\n\n        if (promiseInput) {\n          return lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self);\n        } else {\n          return lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self);\n        }\n      };\n\n      fn.__proto__ = nodeFunc;\n\n      return fn;\n    }\n\n    var lib$rsvp$node$$default = lib$rsvp$node$$denodeify;\n\n    function lib$rsvp$node$$handleValueInput(promise, args, nodeFunc, self) {\n      var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n      if (result === lib$rsvp$node$$ERROR) {\n        lib$rsvp$$internal$$reject(promise, result.value);\n      }\n      return promise;\n    }\n\n    function lib$rsvp$node$$handlePromiseInput(promise, args, nodeFunc, self){\n      return lib$rsvp$promise$$default.all(args).then(function(args){\n        var result = lib$rsvp$node$$tryApply(nodeFunc, self, args);\n        if (result === lib$rsvp$node$$ERROR) {\n          lib$rsvp$$internal$$reject(promise, result.value);\n        }\n        return promise;\n      });\n    }\n\n    function lib$rsvp$node$$needsPromiseInput(arg) {\n      if (arg && typeof arg === 'object') {\n        if (arg.constructor === lib$rsvp$promise$$default) {\n          return true;\n        } else {\n          return lib$rsvp$node$$getThen(arg);\n        }\n      } else {\n        return false;\n      }\n    }\n    var lib$rsvp$platform$$platform;\n\n    /* global self */\n    if (typeof self === 'object') {\n      lib$rsvp$platform$$platform = self;\n\n    /* global global */\n    } else if (typeof global === 'object') {\n      lib$rsvp$platform$$platform = global;\n    } else {\n      throw new Error('no global: `self` or `global` found');\n    }\n\n    var lib$rsvp$platform$$default = lib$rsvp$platform$$platform;\n    function lib$rsvp$race$$race(array, label) {\n      return lib$rsvp$promise$$default.race(array, label);\n    }\n    var lib$rsvp$race$$default = lib$rsvp$race$$race;\n    function lib$rsvp$reject$$reject(reason, label) {\n      return lib$rsvp$promise$$default.reject(reason, label);\n    }\n    var lib$rsvp$reject$$default = lib$rsvp$reject$$reject;\n    function lib$rsvp$resolve$$resolve(value, label) {\n      return lib$rsvp$promise$$default.resolve(value, label);\n    }\n    var lib$rsvp$resolve$$default = lib$rsvp$resolve$$resolve;\n    function lib$rsvp$rethrow$$rethrow(reason) {\n      setTimeout(function() {\n        throw reason;\n      });\n      throw reason;\n    }\n    var lib$rsvp$rethrow$$default = lib$rsvp$rethrow$$rethrow;\n\n    // defaults\n    lib$rsvp$config$$config.async = lib$rsvp$asap$$default;\n    lib$rsvp$config$$config.after = function(cb) {\n      setTimeout(cb, 0);\n    };\n    var lib$rsvp$$cast = lib$rsvp$resolve$$default;\n    function lib$rsvp$$async(callback, arg) {\n      lib$rsvp$config$$config.async(callback, arg);\n    }\n\n    function lib$rsvp$$on() {\n      lib$rsvp$config$$config['on'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    function lib$rsvp$$off() {\n      lib$rsvp$config$$config['off'].apply(lib$rsvp$config$$config, arguments);\n    }\n\n    // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\n    if (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n      var lib$rsvp$$callbacks = window['__PROMISE_INSTRUMENTATION__'];\n      lib$rsvp$config$$configure('instrument', true);\n      for (var lib$rsvp$$eventName in lib$rsvp$$callbacks) {\n        if (lib$rsvp$$callbacks.hasOwnProperty(lib$rsvp$$eventName)) {\n          lib$rsvp$$on(lib$rsvp$$eventName, lib$rsvp$$callbacks[lib$rsvp$$eventName]);\n        }\n      }\n    }\n\n    var lib$rsvp$umd$$RSVP = {\n      'race': lib$rsvp$race$$default,\n      'Promise': lib$rsvp$promise$$default,\n      'allSettled': lib$rsvp$all$settled$$default,\n      'hash': lib$rsvp$hash$$default,\n      'hashSettled': lib$rsvp$hash$settled$$default,\n      'denodeify': lib$rsvp$node$$default,\n      'on': lib$rsvp$$on,\n      'off': lib$rsvp$$off,\n      'map': lib$rsvp$map$$default,\n      'filter': lib$rsvp$filter$$default,\n      'resolve': lib$rsvp$resolve$$default,\n      'reject': lib$rsvp$reject$$default,\n      'all': lib$rsvp$all$$default,\n      'rethrow': lib$rsvp$rethrow$$default,\n      'defer': lib$rsvp$defer$$default,\n      'EventTarget': lib$rsvp$events$$default,\n      'configure': lib$rsvp$config$$configure,\n      'async': lib$rsvp$$async\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$rsvp$umd$$RSVP; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$rsvp$umd$$RSVP;\n    } else if (typeof lib$rsvp$platform$$default !== 'undefined') {\n      lib$rsvp$platform$$default['RSVP'] = lib$rsvp$umd$$RSVP;\n    }\n}).call(this);\n\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":66}]},{},[27])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}